!function(t){var n=window.webpackHotUpdate;window.webpackHotUpdate=function(t,e){!function(t,n){if(!_[t]||!w[t])return;for(var e in w[t]=!1,n)Object.prototype.hasOwnProperty.call(n,e)&&(d[e]=n[e]);0==--v&&0===y&&A()}(t,e),n&&n(t,e)};var e,r=!0,i="289e93b02bba9e17c0d4",o=1e4,u={},a=[],c=[];function l(t){var n=k[t];if(!n)return C;var r=function(r){return n.hot.active?(k[r]?-1===k[r].parents.indexOf(t)&&k[r].parents.push(t):(a=[t],e=r),-1===n.children.indexOf(r)&&n.children.push(r)):(console.warn("[HMR] unexpected require("+r+") from disposed module "+t),a=[]),C(r)},i=function(t){return{configurable:!0,enumerable:!0,get:function(){return C[t]},set:function(n){C[t]=n}}};for(var o in C)Object.prototype.hasOwnProperty.call(C,o)&&"e"!==o&&"t"!==o&&Object.defineProperty(r,o,i(o));return r.e=function(t){return"ready"===f&&h("prepare"),y++,C.e(t).then(n,function(t){throw n(),t});function n(){y--,"prepare"===f&&(m[t]||x(t),0===y&&0===v&&A())}},r.t=function(t,n){return 1&n&&(t=r(t)),C.t(t,-2&n)},r}var s=[],f="idle";function h(t){f=t;for(var n=0;n<s.length;n++)s[n].call(null,t)}var p,d,g,v=0,y=0,m={},w={},_={};function M(t){return+t+""===t?+t:t}function b(t){if("idle"!==f)throw new Error("check() is only allowed in idle status");return r=t,h("check"),function(t){return t=t||1e4,new Promise(function(n,e){if("undefined"==typeof XMLHttpRequest)return e(new Error("No browser support"));try{var r=new XMLHttpRequest,o=C.p+""+i+".hot-update.json";r.open("GET",o,!0),r.timeout=t,r.send(null)}catch(t){return e(t)}r.onreadystatechange=function(){if(4===r.readyState)if(0===r.status)e(new Error("Manifest request to "+o+" timed out."));else if(404===r.status)n();else if(200!==r.status&&304!==r.status)e(new Error("Manifest request to "+o+" failed."));else{try{var t=JSON.parse(r.responseText)}catch(t){return void e(t)}n(t)}}})}(o).then(function(t){if(!t)return h("idle"),null;w={},m={},_=t.c,g=t.h,h("prepare");var n=new Promise(function(t,n){p={resolve:t,reject:n}});d={};return x(0),"prepare"===f&&0===y&&0===v&&A(),n})}function x(t){_[t]?(w[t]=!0,v++,function(t){var n=document.getElementsByTagName("head")[0],e=document.createElement("script");e.charset="utf-8",e.src=C.p+""+t+"."+i+".hot-update.js",n.appendChild(e)}(t)):m[t]=!0}function A(){h("ready");var t=p;if(p=null,t)if(r)Promise.resolve().then(function(){return T(r)}).then(function(n){t.resolve(n)},function(n){t.reject(n)});else{var n=[];for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&n.push(M(e));t.resolve(n)}}function T(n){if("ready"!==f)throw new Error("apply() is only allowed in ready status");var e,r,o,c,l;function s(t){for(var n=[t],e={},r=n.slice().map(function(t){return{chain:[t],id:t}});r.length>0;){var i=r.pop(),o=i.id,u=i.chain;if((c=k[o])&&!c.hot._selfAccepted){if(c.hot._selfDeclined)return{type:"self-declined",chain:u,moduleId:o};if(c.hot._main)return{type:"unaccepted",chain:u,moduleId:o};for(var a=0;a<c.parents.length;a++){var l=c.parents[a],s=k[l];if(s){if(s.hot._declinedDependencies[o])return{type:"declined",chain:u.concat([l]),moduleId:o,parentId:l};-1===n.indexOf(l)&&(s.hot._acceptedDependencies[o]?(e[l]||(e[l]=[]),p(e[l],[o])):(delete e[l],n.push(l),r.push({chain:u.concat([l]),id:l})))}}}}return{type:"accepted",moduleId:t,outdatedModules:n,outdatedDependencies:e}}function p(t,n){for(var e=0;e<n.length;e++){var r=n[e];-1===t.indexOf(r)&&t.push(r)}}n=n||{};var v={},y=[],m={},w=function(){console.warn("[HMR] unexpected require("+x.moduleId+") to disposed module")};for(var b in d)if(Object.prototype.hasOwnProperty.call(d,b)){var x;l=M(b);var A=!1,T=!1,E=!1,D="";switch((x=d[b]?s(l):{type:"disposed",moduleId:b}).chain&&(D="\nUpdate propagation: "+x.chain.join(" -> ")),x.type){case"self-declined":n.onDeclined&&n.onDeclined(x),n.ignoreDeclined||(A=new Error("Aborted because of self decline: "+x.moduleId+D));break;case"declined":n.onDeclined&&n.onDeclined(x),n.ignoreDeclined||(A=new Error("Aborted because of declined dependency: "+x.moduleId+" in "+x.parentId+D));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(x),n.ignoreUnaccepted||(A=new Error("Aborted because "+l+" is not accepted"+D));break;case"accepted":n.onAccepted&&n.onAccepted(x),T=!0;break;case"disposed":n.onDisposed&&n.onDisposed(x),E=!0;break;default:throw new Error("Unexception type "+x.type)}if(A)return h("abort"),Promise.reject(A);if(T)for(l in m[l]=d[l],p(y,x.outdatedModules),x.outdatedDependencies)Object.prototype.hasOwnProperty.call(x.outdatedDependencies,l)&&(v[l]||(v[l]=[]),p(v[l],x.outdatedDependencies[l]));E&&(p(y,[x.moduleId]),m[l]=w)}var S,N=[];for(r=0;r<y.length;r++)l=y[r],k[l]&&k[l].hot._selfAccepted&&N.push({module:l,errorHandler:k[l].hot._selfAccepted});h("dispose"),Object.keys(_).forEach(function(t){!1===_[t]&&function(t){delete installedChunks[t]}(t)});for(var U,O,H=y.slice();H.length>0;)if(l=H.pop(),c=k[l]){var j={},P=c.hot._disposeHandlers;for(o=0;o<P.length;o++)(e=P[o])(j);for(u[l]=j,c.hot.active=!1,delete k[l],delete v[l],o=0;o<c.children.length;o++){var F=k[c.children[o]];F&&((S=F.parents.indexOf(l))>=0&&F.parents.splice(S,1))}}for(l in v)if(Object.prototype.hasOwnProperty.call(v,l)&&(c=k[l]))for(O=v[l],o=0;o<O.length;o++)U=O[o],(S=c.children.indexOf(U))>=0&&c.children.splice(S,1);for(l in h("apply"),i=g,m)Object.prototype.hasOwnProperty.call(m,l)&&(t[l]=m[l]);var Y=null;for(l in v)if(Object.prototype.hasOwnProperty.call(v,l)&&(c=k[l])){O=v[l];var I=[];for(r=0;r<O.length;r++)if(U=O[r],e=c.hot._acceptedDependencies[U]){if(-1!==I.indexOf(e))continue;I.push(e)}for(r=0;r<I.length;r++){e=I[r];try{e(O)}catch(t){n.onErrored&&n.onErrored({type:"accept-errored",moduleId:l,dependencyId:O[r],error:t}),n.ignoreErrored||Y||(Y=t)}}}for(r=0;r<N.length;r++){var q=N[r];l=q.module,a=[l];try{C(l)}catch(t){if("function"==typeof q.errorHandler)try{q.errorHandler(t)}catch(e){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:l,error:e,originalError:t}),n.ignoreErrored||Y||(Y=e),Y||(Y=t)}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:l,error:t}),n.ignoreErrored||Y||(Y=t)}}return Y?(h("fail"),Promise.reject(Y)):(h("idle"),new Promise(function(t){t(y)}))}var k={};function C(n){if(k[n])return k[n].exports;var r=k[n]={i:n,l:!1,exports:{},hot:function(t){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:e!==t,active:!0,accept:function(t,e){if(void 0===t)n._selfAccepted=!0;else if("function"==typeof t)n._selfAccepted=t;else if("object"==typeof t)for(var r=0;r<t.length;r++)n._acceptedDependencies[t[r]]=e||function(){};else n._acceptedDependencies[t]=e||function(){}},decline:function(t){if(void 0===t)n._selfDeclined=!0;else if("object"==typeof t)for(var e=0;e<t.length;e++)n._declinedDependencies[t[e]]=!0;else n._declinedDependencies[t]=!0},dispose:function(t){n._disposeHandlers.push(t)},addDisposeHandler:function(t){n._disposeHandlers.push(t)},removeDisposeHandler:function(t){var e=n._disposeHandlers.indexOf(t);e>=0&&n._disposeHandlers.splice(e,1)},check:b,apply:T,status:function(t){if(!t)return f;s.push(t)},addStatusHandler:function(t){s.push(t)},removeStatusHandler:function(t){var n=s.indexOf(t);n>=0&&s.splice(n,1)},data:u[t]};return e=void 0,n}(n),parents:(c=a,a=[],c),children:[]};return t[n].call(r.exports,r,r.exports,l(n)),r.l=!0,r.exports}C.m=t,C.c=k,C.d=function(t,n,e){C.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},C.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},C.t=function(t,n){if(1&n&&(t=C(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(C.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)C.d(e,r,function(n){return t[n]}.bind(null,r));return e},C.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return C.d(n,"a",n),n},C.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},C.p="",C.h=function(){return i},l(1)(C.s=1)}([function(t,n,e){},function(t,n,e){"use strict";e.r(n);e(0);var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){return 1===t.length&&(t=function(t){return function(n,e){return r(t(n),e)}}(t)),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}};var o=i(r),u=o.right,a=(o.left,u);var c=function(t,n){var e,r,i,o=t.length,u=-1;if(null==n){for(;++u<o;)if(null!=(e=t[u])&&e>=e)for(r=i=e;++u<o;)null!=(e=t[u])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++u<o;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=i=e;++u<o;)null!=(e=n(t[u],u,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},l=Array.prototype,s=(l.slice,l.map,Math.sqrt(50)),f=Math.sqrt(10),h=Math.sqrt(2),p=function(t,n,e){var r,i,o,u,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(u=d(t,n,e))||!isFinite(u))return[];if(u>0)for(t=Math.ceil(t/u),n=Math.floor(n/u),o=new Array(i=Math.ceil(n-t+1));++a<i;)o[a]=(t+a)*u;else for(t=Math.floor(t*u),n=Math.ceil(n*u),o=new Array(i=Math.ceil(t-n+1));++a<i;)o[a]=(t-a)/u;return r&&o.reverse(),o};function d(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=s?10:o>=f?5:o>=h?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=s?10:o>=f?5:o>=h?2:1)}var g=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},v=function(t){return(t=g(Math.abs(t)))?t[1]:NaN},y=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function m(t){return new w(t)}function w(t){if(!(n=y.exec(t)))throw new Error("invalid format: "+t);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}m.prototype=w.prototype,w.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var _,M,b,x=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(i>0){if(!+t[r])break t;i=0}}return i>0?t.slice(0,i)+t.slice(n+1):t},A=function(t,n){var e=g(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},T={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return A(100*t,n)},r:A,s:function(t,n){var e=g(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(_=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,u=r.length;return o===u?r:o>u?r+new Array(o-u+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+g(t,Math.max(0,n+o-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},k=function(t){return t},C=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],E=function(t){var n=t.grouping&&t.thousands?function(t,n){return function(e,r){for(var i=e.length,o=[],u=0,a=t[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),o.push(e.substring(i-=a,i+a)),!((c+=a+1)>r));)a=t[u=(u+1)%t.length];return o.reverse().join(n)}}(t.grouping,t.thousands):k,e=t.currency,r=t.decimal,i=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):k,o=t.percent||"%";function u(t){var u=(t=m(t)).fill,a=t.align,c=t.sign,l=t.symbol,s=t.zero,f=t.width,h=t.comma,p=t.precision,d=t.trim,g=t.type;"n"===g?(h=!0,g="g"):T[g]||(null==p&&(p=12),d=!0,g="g"),(s||"0"===u&&"="===a)&&(s=!0,u="0",a="=");var v="$"===l?e[0]:"#"===l&&/[boxX]/.test(g)?"0"+g.toLowerCase():"",y="$"===l?e[1]:/[%p]/.test(g)?o:"",w=T[g],M=/[defgprs%]/.test(g);function b(t){var e,o,l,m=v,b=y;if("c"===g)b=w(t)+b,t="";else{var A=(t=+t)<0;if(t=w(Math.abs(t),p),d&&(t=x(t)),A&&0==+t&&(A=!1),m=(A?"("===c?c:"-":"-"===c||"("===c?"":c)+m,b=("s"===g?C[8+_/3]:"")+b+(A&&"("===c?")":""),M)for(e=-1,o=t.length;++e<o;)if(48>(l=t.charCodeAt(e))||l>57){b=(46===l?r+t.slice(e+1):t.slice(e))+b,t=t.slice(0,e);break}}h&&!s&&(t=n(t,1/0));var T=m.length+t.length+b.length,k=T<f?new Array(f-T+1).join(u):"";switch(h&&s&&(t=n(k+t,k.length?f-b.length:1/0),k=""),a){case"<":t=m+t+b+k;break;case"=":t=m+k+t+b;break;case"^":t=k.slice(0,T=k.length>>1)+m+t+b+k.slice(T);break;default:t=k+m+t+b}return i(t)}return p=null==p?6:/[gprs]/.test(g)?Math.max(1,Math.min(21,p)):Math.max(0,Math.min(20,p)),b.toString=function(){return t+""},b}return{format:u,formatPrefix:function(t,n){var e=u(((t=m(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(v(n)/3))),i=Math.pow(10,-r),o=C[8+r/3];return function(t){return e(i*t)+o}}}};!function(t){M=E(t),b=M.format,M.formatPrefix}({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var D="http://www.w3.org/1999/xhtml",S={svg:"http://www.w3.org/2000/svg",xhtml:D,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},N=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),S.hasOwnProperty(n)?{space:S[n],local:t}:t};var U=function(t){var n=N(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===D&&n.documentElement.namespaceURI===D?n.createElement(t):n.createElementNS(e,t)}})(n)};function O(){}var H=function(t){return null==t?O:function(){return this.querySelector(t)}};function j(){return[]}var P=function(t){return null==t?j:function(){return this.querySelectorAll(t)}},F=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var Y=document.documentElement;if(!Y.matches){var I=Y.webkitMatchesSelector||Y.msMatchesSelector||Y.mozMatchesSelector||Y.oMatchesSelector;F=function(t){return function(){return I.call(this,t)}}}}var q=F,L=function(t){return new Array(t.length)};function $(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}$.prototype={constructor:$,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var X="$";function z(t,n,e,r,i,o){for(var u,a=0,c=n.length,l=o.length;a<l;++a)(u=n[a])?(u.__data__=o[a],r[a]=u):e[a]=new $(t,o[a]);for(;a<c;++a)(u=n[a])&&(i[a]=u)}function B(t,n,e,r,i,o,u){var a,c,l,s={},f=n.length,h=o.length,p=new Array(f);for(a=0;a<f;++a)(c=n[a])&&(p[a]=l=X+u.call(c,c.__data__,a,n),l in s?i[a]=c:s[l]=c);for(a=0;a<h;++a)(c=s[l=X+u.call(t,o[a],a,o)])?(r[a]=c,c.__data__=o[a],s[l]=null):e[a]=new $(t,o[a]);for(a=0;a<f;++a)(c=n[a])&&s[p[a]]===c&&(i[a]=c)}function R(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var V=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function Z(t,n){return t.style.getPropertyValue(n)||V(t).getComputedStyle(t,null).getPropertyValue(n)}function W(t){return t.trim().split(/^|\s+/)}function Q(t){return t.classList||new G(t)}function G(t){this._node=t,this._names=W(t.getAttribute("class")||"")}function J(t,n){for(var e=Q(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function K(t,n){for(var e=Q(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}G.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function tt(){this.textContent=""}function nt(){this.innerHTML=""}function et(){this.nextSibling&&this.parentNode.appendChild(this)}function rt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function it(){return null}function ot(){var t=this.parentNode;t&&t.removeChild(this)}function ut(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function at(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var ct={},lt=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(ct={mouseenter:"mouseover",mouseleave:"mouseout"}));function st(t,n,e){return t=ft(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function ft(t,n,e){return function(r){var i=lt;lt=r;try{t.call(this,this.__data__,n,e)}finally{lt=i}}}function ht(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function pt(t,n,e){var r=ct.hasOwnProperty(t.type)?st:ft;return function(i,o,u){var a,c=this.__on,l=r(n,o,u);if(c)for(var s=0,f=c.length;s<f;++s)if((a=c[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=l,a.capture=e),void(a.value=n);this.addEventListener(t.type,l,e),a={type:t.type,name:t.name,value:n,listener:l,capture:e},c?c.push(a):this.__on=[a]}}function dt(t,n,e){var r=V(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var gt=[null];function vt(t,n){this._groups=t,this._parents=n}function yt(){return new vt([[document.documentElement]],gt)}vt.prototype=yt.prototype={constructor:vt,select:function(t){"function"!=typeof t&&(t=H(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u,a=n[i],c=a.length,l=r[i]=new Array(c),s=0;s<c;++s)(o=a[s])&&(u=t.call(o,o.__data__,s,a))&&("__data__"in o&&(u.__data__=o.__data__),l[s]=u);return new vt(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=P(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var u,a=n[o],c=a.length,l=0;l<c;++l)(u=a[l])&&(r.push(t.call(u,u.__data__,l,a)),i.push(u));return new vt(r,i)},filter:function(t){"function"!=typeof t&&(t=q(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],l=0;l<a;++l)(o=u[l])&&t.call(o,o.__data__,l,u)&&c.push(o);return new vt(r,this._parents)},data:function(t,n){if(!t)return p=new Array(this.size()),l=-1,this.each(function(t){p[++l]=t}),p;var e=n?B:z,r=this._parents,i=this._groups;"function"!=typeof t&&(t=function(t){return function(){return t}}(t));for(var o=i.length,u=new Array(o),a=new Array(o),c=new Array(o),l=0;l<o;++l){var s=r[l],f=i[l],h=f.length,p=t.call(s,s&&s.__data__,l,r),d=p.length,g=a[l]=new Array(d),v=u[l]=new Array(d);e(s,f,g,v,c[l]=new Array(h),p,n);for(var y,m,w=0,_=0;w<d;++w)if(y=g[w]){for(w>=_&&(_=w+1);!(m=v[_])&&++_<d;);y._next=m||null}}return(u=new vt(u,r))._enter=a,u._exit=c,u},enter:function(){return new vt(this._enter||this._groups.map(L),this._parents)},exit:function(){return new vt(this._exit||this._groups.map(L),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,l=n[a],s=e[a],f=l.length,h=u[a]=new Array(f),p=0;p<f;++p)(c=l[p]||s[p])&&(h[p]=c);for(;a<r;++a)u[a]=n[a];return new vt(u,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&u!==r.nextSibling&&u.parentNode.insertBefore(r,u),u=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=R);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],c=a.length,l=i[o]=new Array(c),s=0;s<c;++s)(u=a[s])&&(l[s]=u);l.sort(n)}return new vt(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,a=o.length;u<a;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},attr:function(t,n){var e=N(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):Z(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=W(t+"");if(arguments.length<2){for(var r=Q(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?J:K)(this,t)}}:n?function(t){return function(){J(this,t)}}:function(t){return function(){K(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?tt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?nt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(et)},lower:function(){return this.each(rt)},append:function(t){var n="function"==typeof t?t:U(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:U(t),r=null==n?it:"function"==typeof n?n:H(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(ot)},clone:function(t){return this.select(t?at:ut)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),u=o.length;if(!(arguments.length<2)){for(a=n?pt:ht,null==e&&(e=!1),r=0;r<u;++r)this.each(a(o[r],n,e));return this}var a=this.node().__on;if(a)for(var c,l=0,s=a.length;l<s;++l)for(r=0,c=a[l];r<u;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return dt(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return dt(this,t,n)}})(t,n))}};var mt=yt,wt=function(t){return"string"==typeof t?new vt([[document.querySelector(t)]],[document.documentElement]):new vt([[t]],gt)},_t=0;function Mt(){this._="@"+(++_t).toString(36)}Mt.prototype=function(){return new Mt}.prototype={constructor:Mt,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var bt=function(t){return"string"==typeof t?new vt([document.querySelectorAll(t)],[document.documentElement]):new vt([null==t?[]:t],gt)};function xt(){}function At(t,n){var e=new xt;if(t instanceof xt)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var u in t)e.set(u,t[u]);return e}xt.prototype=At.prototype={constructor:xt,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var Tt=At;function kt(){}var Ct=Tt.prototype;function Et(t,n){var e=new kt;if(t instanceof kt)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}kt.prototype=Et.prototype={constructor:kt,has:Ct.has,add:function(t){return this["$"+(t+="")]=t,this},remove:Ct.remove,clear:Ct.clear,values:Ct.keys,size:Ct.size,empty:Ct.empty,each:Ct.each};var Dt=Array.prototype,St=Dt.map,Nt=Dt.slice,Ut={name:"implicit"};function Ot(t){var n=Tt(),e=[],r=Ut;function i(i){var o=i+"",u=n.get(o);if(!u){if(r!==Ut)return r;n.set(o,u=e.push(i))}return t[(u-1)%t.length]}return t=null==t?[]:Nt.call(t),i.domain=function(t){if(!arguments.length)return e.slice();e=[],n=Tt();for(var r,o,u=-1,a=t.length;++u<a;)n.has(o=(r=t[u])+"")||n.set(o,e.push(r));return i},i.range=function(n){return arguments.length?(t=Nt.call(n),i):t.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return Ot().domain(e).range(t).unknown(r)},i}var Ht=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function jt(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function Pt(){}var Ft="\\s*([+-]?\\d+)\\s*",Yt="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",It="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",qt=/^#([0-9a-f]{3})$/,Lt=/^#([0-9a-f]{6})$/,$t=new RegExp("^rgb\\("+[Ft,Ft,Ft]+"\\)$"),Xt=new RegExp("^rgb\\("+[It,It,It]+"\\)$"),zt=new RegExp("^rgba\\("+[Ft,Ft,Ft,Yt]+"\\)$"),Bt=new RegExp("^rgba\\("+[It,It,It,Yt]+"\\)$"),Rt=new RegExp("^hsl\\("+[Yt,It,It]+"\\)$"),Vt=new RegExp("^hsla\\("+[Yt,It,It,Yt]+"\\)$"),Zt={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Wt(t){var n;return t=(t+"").trim().toLowerCase(),(n=qt.exec(t))?new tn((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=Lt.exec(t))?Qt(parseInt(n[1],16)):(n=$t.exec(t))?new tn(n[1],n[2],n[3],1):(n=Xt.exec(t))?new tn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=zt.exec(t))?Gt(n[1],n[2],n[3],n[4]):(n=Bt.exec(t))?Gt(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=Rt.exec(t))?en(n[1],n[2]/100,n[3]/100,1):(n=Vt.exec(t))?en(n[1],n[2]/100,n[3]/100,n[4]):Zt.hasOwnProperty(t)?Qt(Zt[t]):"transparent"===t?new tn(NaN,NaN,NaN,0):null}function Qt(t){return new tn(t>>16&255,t>>8&255,255&t,1)}function Gt(t,n,e,r){return r<=0&&(t=n=e=NaN),new tn(t,n,e,r)}function Jt(t){return t instanceof Pt||(t=Wt(t)),t?new tn((t=t.rgb()).r,t.g,t.b,t.opacity):new tn}function Kt(t,n,e,r){return 1===arguments.length?Jt(t):new tn(t,n,e,null==r?1:r)}function tn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function nn(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function en(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new on(t,n,e,r)}function rn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof on)return new on(t.h,t.s,t.l,t.opacity);if(t instanceof Pt||(t=Wt(t)),!t)return new on;if(t instanceof on)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),u=NaN,a=o-i,c=(o+i)/2;return a?(u=n===o?(e-r)/a+6*(e<r):e===o?(r-n)/a+2:(n-e)/a+4,a/=c<.5?o+i:2-o-i,u*=60):a=c>0&&c<1?0:u,new on(u,a,c,t.opacity)}(t):new on(t,n,e,null==r?1:r)}function on(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function un(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Ht(Pt,Wt,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),Ht(tn,Kt,jt(Pt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new tn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new tn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+nn(this.r)+nn(this.g)+nn(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),Ht(on,rn,jt(Pt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new on(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new on(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new tn(un(t>=240?t-240:t+120,i,r),un(t,i,r),un(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var an=Math.PI/180,cn=180/Math.PI,ln=.96422,sn=1,fn=.82521,hn=4/29,pn=6/29,dn=3*pn*pn,gn=pn*pn*pn;function vn(t){if(t instanceof mn)return new mn(t.l,t.a,t.b,t.opacity);if(t instanceof Tn){if(isNaN(t.h))return new mn(t.l,0,0,t.opacity);var n=t.h*an;return new mn(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof tn||(t=Jt(t));var e,r,i=bn(t.r),o=bn(t.g),u=bn(t.b),a=wn((.2225045*i+.7168786*o+.0606169*u)/sn);return i===o&&o===u?e=r=a:(e=wn((.4360747*i+.3850649*o+.1430804*u)/ln),r=wn((.0139322*i+.0971045*o+.7141733*u)/fn)),new mn(116*a-16,500*(e-a),200*(a-r),t.opacity)}function yn(t,n,e,r){return 1===arguments.length?vn(t):new mn(t,n,e,null==r?1:r)}function mn(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function wn(t){return t>gn?Math.pow(t,1/3):t/dn+hn}function _n(t){return t>pn?t*t*t:dn*(t-hn)}function Mn(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function bn(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function xn(t){if(t instanceof Tn)return new Tn(t.h,t.c,t.l,t.opacity);if(t instanceof mn||(t=vn(t)),0===t.a&&0===t.b)return new Tn(NaN,0,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*cn;return new Tn(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function An(t,n,e,r){return 1===arguments.length?xn(t):new Tn(t,n,e,null==r?1:r)}function Tn(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}Ht(mn,yn,jt(Pt,{brighter:function(t){return new mn(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new mn(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new tn(Mn(3.1338561*(n=ln*_n(n))-1.6168667*(t=sn*_n(t))-.4906146*(e=fn*_n(e))),Mn(-.9787684*n+1.9161415*t+.033454*e),Mn(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),Ht(Tn,An,jt(Pt,{brighter:function(t){return new Tn(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new Tn(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return vn(this).rgb()}}));var kn=-.14861,Cn=1.78277,En=-.29227,Dn=-.90649,Sn=1.97294,Nn=Sn*Dn,Un=Sn*Cn,On=Cn*En-Dn*kn;function Hn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof jn)return new jn(t.h,t.s,t.l,t.opacity);t instanceof tn||(t=Jt(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(On*r+Nn*n-Un*e)/(On+Nn-Un),o=r-i,u=(Sn*(e-i)-En*o)/Dn,a=Math.sqrt(u*u+o*o)/(Sn*i*(1-i)),c=a?Math.atan2(u,o)*cn-120:NaN;return new jn(c<0?c+360:c,a,i,t.opacity)}(t):new jn(t,n,e,null==r?1:r)}function jn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Pn(t,n,e,r,i){var o=t*t,u=o*t;return((1-3*t+3*o-u)*n+(4-6*o+3*u)*e+(1+3*t+3*o-3*u)*r+u*i)/6}Ht(jn,Hn,jt(Pt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new jn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new jn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*an,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new tn(255*(n+e*(kn*r+Cn*i)),255*(n+e*(En*r+Dn*i)),255*(n+e*(Sn*r)),this.opacity)}}));var Fn=function(t){return function(){return t}};function Yn(t,n){return function(e){return t+e*n}}function In(t,n){var e=n-t;return e?Yn(t,e>180||e<-180?e-360*Math.round(e/360):e):Fn(isNaN(t)?n:t)}function qn(t){return 1==(t=+t)?Ln:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):Fn(isNaN(n)?e:n)}}function Ln(t,n){var e=n-t;return e?Yn(t,e):Fn(isNaN(t)?n:t)}var $n=function t(n){var e=qn(n);function r(t,n){var r=e((t=Kt(t)).r,(n=Kt(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),u=Ln(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=u(n),t+""}}return r.gamma=t,r}(1);function Xn(t){return function(n){var e,r,i=n.length,o=new Array(i),u=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=Kt(n[e]),o[e]=r.r||0,u[e]=r.g||0,a[e]=r.b||0;return o=t(o),u=t(u),a=t(a),r.opacity=1,function(t){return r.r=o(t),r.g=u(t),r.b=a(t),r+""}}}Xn(function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],u=r>0?t[r-1]:2*i-o,a=r<n-1?t[r+2]:2*o-i;return Pn((e-r/n)*n,u,i,o,a)}}),Xn(function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],u=t[(r+1)%n],a=t[(r+2)%n];return Pn((e-r/n)*n,i,o,u,a)}});var zn=function(t,n){return n-=t=+t,function(e){return t+n*e}},Bn=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Rn=new RegExp(Bn.source,"g");var Vn,Zn,Wn,Qn,Gn=function(t,n){var e,r,i,o=Bn.lastIndex=Rn.lastIndex=0,u=-1,a=[],c=[];for(t+="",n+="";(e=Bn.exec(t))&&(r=Rn.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,c.push({i:u,x:zn(e,r)})),o=Rn.lastIndex;return o<n.length&&(i=n.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},Jn=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?Fn(n):("number"===r?zn:"string"===r?(e=Wt(n))?(n=e,$n):Gn:n instanceof Wt?$n:n instanceof Date?function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}}:Array.isArray(n)?function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),u=new Array(r);for(e=0;e<i;++e)o[e]=Jn(t[e],n[e]);for(;e<r;++e)u[e]=n[e];return function(t){for(e=0;e<i;++e)u[e]=o[e](t);return u}}:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=Jn(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}:zn)(t,n)},Kn=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},te=180/Math.PI,ne={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},ee=function(t,n,e,r,i,o){var u,a,c;return(u=Math.sqrt(t*t+n*n))&&(t/=u,n/=u),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,u=-u),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*te,skewX:Math.atan(c)*te,scaleX:u,scaleY:a}};function re(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,u){var a=[],c=[];return o=t(o),u=t(u),function(t,r,i,o,u,a){if(t!==i||r!==o){var c=u.push("translate(",null,n,null,e);a.push({i:c-4,x:zn(t,i)},{i:c-2,x:zn(r,o)})}else(i||o)&&u.push("translate("+i+n+o+e)}(o.translateX,o.translateY,u.translateX,u.translateY,a,c),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:zn(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,u.rotate,a,c),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:zn(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,u.skewX,a,c),function(t,n,e,r,o,u){if(t!==e||n!==r){var a=o.push(i(o)+"scale(",null,",",null,")");u.push({i:a-4,x:zn(t,e)},{i:a-2,x:zn(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,u.scaleX,u.scaleY,a,c),o=u=null,function(t){for(var n,e=-1,r=c.length;++e<r;)a[(n=c[e]).i]=n.x(t);return a.join("")}}}var ie=re(function(t){return"none"===t?ne:(Vn||(Vn=document.createElement("DIV"),Zn=document.documentElement,Wn=document.defaultView),Vn.style.transform=t,t=Wn.getComputedStyle(Zn.appendChild(Vn),null).getPropertyValue("transform"),Zn.removeChild(Vn),t=t.slice(7,-1).split(","),ee(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),oe=re(function(t){return null==t?ne:(Qn||(Qn=document.createElementNS("http://www.w3.org/2000/svg","g")),Qn.setAttribute("transform",t),(t=Qn.transform.baseVal.consolidate())?(t=t.matrix,ee(t.a,t.b,t.c,t.d,t.e,t.f)):ne)},", ",")",")");Math.SQRT2;function ue(t){return function(n,e){var r=t((n=rn(n)).h,(e=rn(e)).h),i=Ln(n.s,e.s),o=Ln(n.l,e.l),u=Ln(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=u(t),n+""}}}ue(In),ue(Ln);function ae(t){return function(n,e){var r=t((n=An(n)).h,(e=An(e)).h),i=Ln(n.c,e.c),o=Ln(n.l,e.l),u=Ln(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=u(t),n+""}}}ae(In),ae(Ln);function ce(t){return function n(e){function r(n,r){var i=t((n=Hn(n)).h,(r=Hn(r)).h),o=Ln(n.s,r.s),u=Ln(n.l,r.l),a=Ln(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=u(Math.pow(t,e)),n.opacity=a(t),n+""}}return e=+e,r.gamma=n,r}(1)}ce(In),ce(Ln);var le=function(t){return function(){return t}},se=function(t){return+t},fe=[0,1];function he(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:le(n)}function pe(t,n,e,r){var i=t[0],o=t[1],u=n[0],a=n[1];return o<i?(i=e(o,i),u=r(a,u)):(i=e(i,o),u=r(u,a)),function(t){return u(i(t))}}function de(t,n,e,r){var i=Math.min(t.length,n.length)-1,o=new Array(i),u=new Array(i),c=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++c<i;)o[c]=e(t[c],t[c+1]),u[c]=r(n[c],n[c+1]);return function(n){var e=a(t,n,1,i)-1;return u[e](o[e](n))}}function ge(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function ve(t,n){var e,r,i,o=fe,u=fe,a=Jn,c=!1;function l(){return e=Math.min(o.length,u.length)>2?de:pe,r=i=null,s}function s(n){return(r||(r=e(o,u,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}(t):t,a)))(+n)}return s.invert=function(t){return(i||(i=e(u,o,he,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},s.domain=function(t){return arguments.length?(o=St.call(t,se),l()):o.slice()},s.range=function(t){return arguments.length?(u=Nt.call(t),l()):u.slice()},s.rangeRound=function(t){return u=Nt.call(t),a=Kn,l()},s.clamp=function(t){return arguments.length?(c=!!t,l()):c},s.interpolate=function(t){return arguments.length?(a=t,l()):a},l()}var ye=function(t,n){var e,r=0,i=(t=t.slice()).length-1,o=t[r],u=t[i];return u<o&&(e=r,r=i,i=e,e=o,o=u,u=e),t[r]=n.floor(o),t[i]=n.ceil(u),t};function me(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:le(n)}function we(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function _e(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Me(t){return 10===t?_e:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function be(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function xe(t){return function(n){return-t(-n)}}function Ae(){var t=ve(me,we).domain([1,10]),n=t.domain,e=10,r=be(10),i=Me(10);function o(){return r=be(e),i=Me(e),n()[0]<0&&(r=xe(r),i=xe(i)),t}return t.base=function(t){return arguments.length?(e=+t,o()):e},t.domain=function(t){return arguments.length?(n(t),o()):n()},t.ticks=function(t){var o,u=n(),a=u[0],c=u[u.length-1];(o=c<a)&&(h=a,a=c,c=h);var l,s,f,h=r(a),d=r(c),g=null==t?10:+t,v=[];if(!(e%1)&&d-h<g){if(h=Math.round(h)-1,d=Math.round(d)+1,a>0){for(;h<d;++h)for(s=1,l=i(h);s<e;++s)if(!((f=l*s)<a)){if(f>c)break;v.push(f)}}else for(;h<d;++h)for(s=e-1,l=i(h);s>=1;--s)if(!((f=l*s)<a)){if(f>c)break;v.push(f)}}else v=p(h,d,Math.min(d-h,g)).map(i);return o?v.reverse():v},t.tickFormat=function(n,o){if(null==o&&(o=10===e?".0e":","),"function"!=typeof o&&(o=b(o)),n===1/0)return o;null==n&&(n=10);var u=Math.max(1,e*n/t.ticks().length);return function(t){var n=t/i(Math.round(r(t)));return n*e<e-.5&&(n*=e),n<=u?o(t):""}},t.nice=function(){return n(ye(n(),{floor:function(t){return i(Math.floor(r(t)))},ceil:function(t){return i(Math.ceil(r(t)))}}))},t.copy=function(){return ge(t,Ae().base(e))},t}var Te=new Date,ke=new Date;function Ce(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var u,a=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return a;do{a.push(u=new Date(+e)),n(e,o),t(e)}while(u<e&&e<r);return a},i.filter=function(e){return Ce(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return Te.setTime(+n),ke.setTime(+r),t(Te),t(ke),Math.floor(e(Te,ke))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var Ee=Ce(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});Ee.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?Ce(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):Ee:null};Ee.range;var De=6e4,Se=6048e5,Ne=Ce(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),Ue=(Ne.range,Ce(function(t){t.setTime(Math.floor(t/De)*De)},function(t,n){t.setTime(+t+n*De)},function(t,n){return(n-t)/De},function(t){return t.getMinutes()})),Oe=(Ue.range,Ce(function(t){var n=t.getTimezoneOffset()*De%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()})),He=(Oe.range,Ce(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*De)/864e5},function(t){return t.getDate()-1})),je=He;He.range;function Pe(t){return Ce(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*De)/Se})}var Fe=Pe(0),Ye=Pe(1),Ie=Pe(2),qe=Pe(3),Le=Pe(4),$e=Pe(5),Xe=Pe(6),ze=(Fe.range,Ye.range,Ie.range,qe.range,Le.range,$e.range,Xe.range,Ce(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()})),Be=(ze.range,Ce(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()}));Be.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Ce(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var Re=Be,Ve=(Be.range,Ce(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*De)},function(t,n){return(n-t)/De},function(t){return t.getUTCMinutes()})),Ze=(Ve.range,Ce(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()})),We=(Ze.range,Ce(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1})),Qe=We;We.range;function Ge(t){return Ce(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/Se})}var Je=Ge(0),Ke=Ge(1),tr=Ge(2),nr=Ge(3),er=Ge(4),rr=Ge(5),ir=Ge(6),or=(Je.range,Ke.range,tr.range,nr.range,er.range,rr.range,ir.range,Ce(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()})),ur=(or.range,Ce(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()}));ur.every=function(t){return isFinite(t=Math.floor(t))&&t>0?Ce(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var ar=ur;ur.range;function cr(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function lr(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function sr(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}var fr,hr,pr,dr={"-":"",_:" ",0:"0"},gr=/^\s*\d+/,vr=/^%/,yr=/[\\^$*+?|[\]().{}]/g;function mr(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function wr(t){return t.replace(yr,"\\$&")}function _r(t){return new RegExp("^(?:"+t.map(wr).join("|")+")","i")}function Mr(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function br(t,n,e){var r=gr.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function xr(t,n,e){var r=gr.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function Ar(t,n,e){var r=gr.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function Tr(t,n,e){var r=gr.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function kr(t,n,e){var r=gr.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function Cr(t,n,e){var r=gr.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Er(t,n,e){var r=gr.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function Dr(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function Sr(t,n,e){var r=gr.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Nr(t,n,e){var r=gr.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Ur(t,n,e){var r=gr.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Or(t,n,e){var r=gr.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Hr(t,n,e){var r=gr.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function jr(t,n,e){var r=gr.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Pr(t,n,e){var r=gr.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Fr(t,n,e){var r=gr.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Yr(t,n,e){var r=vr.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function Ir(t,n,e){var r=gr.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function qr(t,n,e){var r=gr.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function Lr(t,n){return mr(t.getDate(),n,2)}function $r(t,n){return mr(t.getHours(),n,2)}function Xr(t,n){return mr(t.getHours()%12||12,n,2)}function zr(t,n){return mr(1+je.count(Re(t),t),n,3)}function Br(t,n){return mr(t.getMilliseconds(),n,3)}function Rr(t,n){return Br(t,n)+"000"}function Vr(t,n){return mr(t.getMonth()+1,n,2)}function Zr(t,n){return mr(t.getMinutes(),n,2)}function Wr(t,n){return mr(t.getSeconds(),n,2)}function Qr(t){var n=t.getDay();return 0===n?7:n}function Gr(t,n){return mr(Fe.count(Re(t),t),n,2)}function Jr(t,n){var e=t.getDay();return t=e>=4||0===e?Le(t):Le.ceil(t),mr(Le.count(Re(t),t)+(4===Re(t).getDay()),n,2)}function Kr(t){return t.getDay()}function ti(t,n){return mr(Ye.count(Re(t),t),n,2)}function ni(t,n){return mr(t.getFullYear()%100,n,2)}function ei(t,n){return mr(t.getFullYear()%1e4,n,4)}function ri(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+mr(n/60|0,"0",2)+mr(n%60,"0",2)}function ii(t,n){return mr(t.getUTCDate(),n,2)}function oi(t,n){return mr(t.getUTCHours(),n,2)}function ui(t,n){return mr(t.getUTCHours()%12||12,n,2)}function ai(t,n){return mr(1+Qe.count(ar(t),t),n,3)}function ci(t,n){return mr(t.getUTCMilliseconds(),n,3)}function li(t,n){return ci(t,n)+"000"}function si(t,n){return mr(t.getUTCMonth()+1,n,2)}function fi(t,n){return mr(t.getUTCMinutes(),n,2)}function hi(t,n){return mr(t.getUTCSeconds(),n,2)}function pi(t){var n=t.getUTCDay();return 0===n?7:n}function di(t,n){return mr(Je.count(ar(t),t),n,2)}function gi(t,n){var e=t.getUTCDay();return t=e>=4||0===e?er(t):er.ceil(t),mr(er.count(ar(t),t)+(4===ar(t).getUTCDay()),n,2)}function vi(t){return t.getUTCDay()}function yi(t,n){return mr(Ke.count(ar(t),t),n,2)}function mi(t,n){return mr(t.getUTCFullYear()%100,n,2)}function wi(t,n){return mr(t.getUTCFullYear()%1e4,n,4)}function _i(){return"+0000"}function Mi(){return"%"}function bi(t){return+t}function xi(t){return Math.floor(+t/1e3)}!function(t){fr=function(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,u=t.shortDays,a=t.months,c=t.shortMonths,l=_r(i),s=Mr(i),f=_r(o),h=Mr(o),p=_r(u),d=Mr(u),g=_r(a),v=Mr(a),y=_r(c),m=Mr(c),w={a:function(t){return u[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:Lr,e:Lr,f:Rr,H:$r,I:Xr,j:zr,L:Br,m:Vr,M:Zr,p:function(t){return i[+(t.getHours()>=12)]},Q:bi,s:xi,S:Wr,u:Qr,U:Gr,V:Jr,w:Kr,W:ti,x:null,X:null,y:ni,Y:ei,Z:ri,"%":Mi},_={a:function(t){return u[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:ii,e:ii,f:li,H:oi,I:ui,j:ai,L:ci,m:si,M:fi,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:bi,s:xi,S:hi,u:pi,U:di,V:gi,w:vi,W:yi,x:null,X:null,y:mi,Y:wi,Z:_i,"%":Mi},M={a:function(t,n,e){var r=p.exec(n.slice(e));return r?(t.w=d[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=m[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=g.exec(n.slice(e));return r?(t.m=v[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return A(t,n,e,r)},d:Nr,e:Nr,f:Fr,H:Or,I:Or,j:Ur,L:Pr,m:Sr,M:Hr,p:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:Ir,s:qr,S:jr,u:xr,U:Ar,V:Tr,w:br,W:kr,x:function(t,n,r){return A(t,e,n,r)},X:function(t,n,e){return A(t,r,n,e)},y:Er,Y:Cr,Z:Dr,"%":Yr};function b(t,n){return function(e){var r,i,o,u=[],a=-1,c=0,l=t.length;for(e instanceof Date||(e=new Date(+e));++a<l;)37===t.charCodeAt(a)&&(u.push(t.slice(c,a)),null!=(i=dr[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),u.push(r),c=a+1);return u.push(t.slice(c,a)),u.join("")}}function x(t,n){return function(e){var r,i,o=sr(1900);if(A(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("p"in o&&(o.H=o.H%12+12*o.p),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(r=(i=(r=lr(sr(o.y))).getUTCDay())>4||0===i?Ke.ceil(r):Ke(r),r=Qe.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(r=(i=(r=n(sr(o.y))).getDay())>4||0===i?Ye.ceil(r):Ye(r),r=je.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?lr(sr(o.y)).getUTCDay():n(sr(o.y)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,lr(o)):n(o)}}function A(t,n,e,r){for(var i,o,u=0,a=n.length,c=e.length;u<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(u++))){if(i=n.charAt(u++),!(o=M[i in dr?n.charAt(u++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return w.x=b(e,w),w.X=b(r,w),w.c=b(n,w),_.x=b(e,_),_.X=b(r,_),_.c=b(n,_),{format:function(t){var n=b(t+="",w);return n.toString=function(){return t},n},parse:function(t){var n=x(t+="",cr);return n.toString=function(){return t},n},utcFormat:function(t){var n=b(t+="",_);return n.toString=function(){return t},n},utcParse:function(t){var n=x(t,lr);return n.toString=function(){return t},n}}}(t),fr.format,fr.parse,hr=fr.utcFormat,pr=fr.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});Date.prototype.toISOString||hr("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||pr("%Y-%m-%dT%H:%M:%S.%LZ");var Ai={value:function(){}};function Ti(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new ki(r)}function ki(t){this._=t}function Ci(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function Ei(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=Ai,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}ki.prototype=Ti.prototype={constructor:ki,on:function(t,n){var e,r=this._,i=function(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}(t+"",r),o=-1,u=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++o<u;)if(e=(t=i[o]).type)r[e]=Ei(r[e],t.name,n);else if(null==n)for(e in r)r[e]=Ei(r[e],t.name,null);return this}for(;++o<u;)if((e=(t=i[o]).type)&&(e=Ci(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new ki(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var Di,Si,Ni=Ti,Ui=0,Oi=0,Hi=0,ji=1e3,Pi=0,Fi=0,Yi=0,Ii="object"==typeof performance&&performance.now?performance:Date,qi="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function Li(){return Fi||(qi($i),Fi=Ii.now()+Yi)}function $i(){Fi=0}function Xi(){this._call=this._time=this._next=null}function zi(t,n,e){var r=new Xi;return r.restart(t,n,e),r}function Bi(){Fi=(Pi=Ii.now())+Yi,Ui=Oi=0;try{!function(){Li(),++Ui;for(var t,n=Di;n;)(t=Fi-n._time)>=0&&n._call.call(null,t),n=n._next;--Ui}()}finally{Ui=0,function(){var t,n,e=Di,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:Di=n);Si=t,Vi(r)}(),Fi=0}}function Ri(){var t=Ii.now(),n=t-Pi;n>ji&&(Yi-=n,Pi=t)}function Vi(t){Ui||(Oi&&(Oi=clearTimeout(Oi)),t-Fi>24?(t<1/0&&(Oi=setTimeout(Bi,t-Ii.now()-Yi)),Hi&&(Hi=clearInterval(Hi))):(Hi||(Pi=Ii.now(),Hi=setInterval(Ri,ji)),Ui=1,qi(Bi)))}Xi.prototype=zi.prototype={constructor:Xi,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?Li():+e)+(null==n?0:+n),this._next||Si===this||(Si?Si._next=this:Di=this,Si=this),this._call=t,this._time=e,Vi()},stop:function(){this._call&&(this._call=null,this._time=1/0,Vi())}};var Zi=function(t,n,e){var r=new Xi;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},Wi=Ni("start","end","interrupt"),Qi=[],Gi=0,Ji=1,Ki=2,to=3,no=4,eo=5,ro=6,io=function(t,n,e,r,i,o){var u=t.__transition;if(u){if(e in u)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(c){var l,s,f,h;if(e.state!==Ji)return a();for(l in i)if((h=i[l]).name===e.name){if(h.state===to)return Zi(o);h.state===no?(h.state=ro,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[l]):+l<n&&(h.state=ro,h.timer.stop(),delete i[l])}if(Zi(function(){e.state===to&&(e.state=no,e.timer.restart(u,e.delay,e.time),u(c))}),e.state=Ki,e.on.call("start",t,t.__data__,e.index,e.group),e.state===Ki){for(e.state=to,r=new Array(f=e.tween.length),l=0,s=-1;l<f;++l)(h=e.tween[l].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function u(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=eo,1),o=-1,u=r.length;++o<u;)r[o].call(null,i);e.state===eo&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=ro,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=zi(function(t){e.state=Ji,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:Wi,tween:Qi,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:Gi})};function oo(t,n){var e=ao(t,n);if(e.state>Gi)throw new Error("too late; already scheduled");return e}function uo(t,n){var e=ao(t,n);if(e.state>Ki)throw new Error("too late; already started");return e}function ao(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}function co(t,n,e){var r=t._id;return t.each(function(){var t=uo(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return ao(t,r).value[n]}}var lo=function(t,n){var e;return("number"==typeof n?zn:n instanceof Wt?$n:(e=Wt(n))?(n=e,$n):Gn)(t,n)};var so=mt.prototype.constructor;var fo=0;function ho(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function po(t){return mt().transition(t)}function go(){return++fo}var vo=mt.prototype;ho.prototype=po.prototype={constructor:ho,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=H(t));for(var r=this._groups,i=r.length,o=new Array(i),u=0;u<i;++u)for(var a,c,l=r[u],s=l.length,f=o[u]=new Array(s),h=0;h<s;++h)(a=l[h])&&(c=t.call(a,a.__data__,h,l))&&("__data__"in a&&(c.__data__=a.__data__),f[h]=c,io(f[h],n,e,h,f,ao(a,e)));return new ho(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=P(t));for(var r=this._groups,i=r.length,o=[],u=[],a=0;a<i;++a)for(var c,l=r[a],s=l.length,f=0;f<s;++f)if(c=l[f]){for(var h,p=t.call(c,c.__data__,f,l),d=ao(c,e),g=0,v=p.length;g<v;++g)(h=p[g])&&io(h,n,e,g,p,d);o.push(p),u.push(c)}return new ho(o,u,n,e)},filter:function(t){"function"!=typeof t&&(t=q(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],l=0;l<a;++l)(o=u[l])&&t.call(o,o.__data__,l,u)&&c.push(o);return new ho(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,l=n[a],s=e[a],f=l.length,h=u[a]=new Array(f),p=0;p<f;++p)(c=l[p]||s[p])&&(h[p]=c);for(;a<r;++a)u[a]=n[a];return new ho(u,this._parents,this._name,this._id)},selection:function(){return new so(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=go(),r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,l=0;l<c;++l)if(u=a[l]){var s=ao(u,n);io(u,t,e,l,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new ho(r,this._parents,t,e)},call:vo.call,nodes:vo.nodes,node:vo.node,size:vo.size,empty:vo.empty,each:vo.each,on:function(t,n){var e=this._id;return arguments.length<2?ao(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?oo:uo;return function(){var u=o(this,t),a=u.on;a!==r&&(i=(r=a).copy()).on(n,e),u.on=i}}(e,t,n))},attr:function(t,n){var e=N(t),r="transform"===e?oe:lo;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttributeNS(t.space,t.local))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttribute(t))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttribute(t)}})(e,r,co(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i;return function(){var o=this.getAttributeNS(t.space,t.local);return o===e?null:o===r?i:i=n(r=o,e)}}:function(t,n,e){var r,i;return function(){var o=this.getAttribute(t);return o===e?null:o===r?i:i=n(r=o,e)}})(e,r,n+""))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=N(t);return this.tween(e,(r.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?ie:lo;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=Z(this,t),u=(this.style.removeProperty(t),Z(this,t));return o===u?null:o===e&&u===r?i:i=n(e=o,r=u)}}(t,r)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof n?function(t,n,e){var r,i,o;return function(){var u=Z(this,t),a=e(this);return null==a&&(this.style.removeProperty(t),a=Z(this,t)),u===a?null:u===r&&a===i?o:o=n(r=u,i=a)}}(t,r,co(this,"style."+t,n)):function(t,n,e){var r,i;return function(){var o=Z(this,t);return o===e?null:o===r?i:i=n(r=o,e)}}(t,r,n+""),e)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(co(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=ao(this.node(),e).tween,o=0,u=i.length;o<u;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=uo(this,t),o=i.tween;if(o!==e)for(var u=0,a=(r=e=o).length;u<a;++u)if(r[u].name===n){(r=r.slice()).splice(u,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=uo(this,t),u=o.tween;if(u!==r){i=(r=u).slice();for(var a={name:n,value:e},c=0,l=i.length;c<l;++c)if(i[c].name===n){i[c]=a;break}c===l&&i.push(a)}o.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){oo(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){oo(this,t).delay=n}})(n,t)):ao(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){uo(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){uo(this,t).duration=n}})(n,t)):ao(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){uo(this,t).ease=n}}(n,t)):ao(this.node(),n).ease}};(function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e})(3),function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),Math.PI;(function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e})(1.70158),function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158);var yo=2*Math.PI,mo=(function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=yo);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*yo)},i.period=function(e){return t(n,e)},i}(1,.3),function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=yo);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*yo)},i.period=function(e){return t(n,e)},i}(1,.3),function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=yo);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*yo)},i.period=function(e){return t(n,e)},i}(1,.3),{time:null,delay:0,duration:250,ease:function(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}});function wo(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return mo.time=Li(),mo;return e}mt.prototype.interrupt=function(t){return this.each(function(){!function(t,n){var e,r,i,o=t.__transition,u=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>Ki&&e.state<eo,e.state=ro,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete o[i]):u=!1;u&&delete t.__transition}}(this,t)})},mt.prototype.transition=function(t){var n,e;t instanceof ho?(n=t._id,t=t._name):(n=go(),(e=mo).time=Li(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,l=0;l<c;++l)(u=a[l])&&io(u,t,n,l,a,e||wo(u,n));return new ho(r,this._parents,t,n)};var _o=wt(".tooltip"),Mo={show:function(t){var n=lt.pageY,e=lt.pageX;e+10>document.body.clientWidth-215&&(e=document.body.clientWidth+5-215),_o.transition().duration(200).style("opacity",.9).on("end",function(){_o.classed("isActive",!0),_o.on("click",this.hide)}),_o.html(t).style("visibility","visible").style("left",e+"px").style("top",n+"px")},hide:function(){_o.transition().duration(500).style("opacity",0)},formatContent:function(t){var n='<ul class="tooltip-list">';return t.forEach(function(t,e){var r=null;t.class&&(r=t.class);var i=Object.keys(t)[0];n+='<li class="'.concat(r,'"><span class="tooltip-label">').concat(i,":</span> ").concat(t[i],"</li>")}),n+="</ul>"}};function bo(t){return function(t){if(Array.isArray(t)){for(var n=0,e=new Array(t.length);n<t.length;n++)e[n]=t[n];return e}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var xo,Ao,To,ko,Co,Eo,Do,So=b(".3s"),No=["canada","china","eu","mexico"],Uo=["#9EB040","#FE5000","#0AA4CF","#F2AF19","#fff"],Oo={top:5,right:5,bottom:5,left:5},Ho=wt(".chart"),jo=8,Po=11,Fo=12,Yo=No;function Io(t){function n(){Ao=n.width(),To=.9*n.width(),ko=function(t,n,e,r){var i,o=t-2,u=n-2,a=Math.floor(o/e),c=Math.floor(u/r);i=a<=c?a:c;return i}(Ao-Po*Fo,To-Po*Fo,Po,jo);var r=function(t,n,e){for(var r=[],i=1,o=1,u=e,a=0;a<n;a++){r.push([]);for(var c=0;c<t;c++)r[a].push({x:i,y:o,width:u,height:u}),i+=u;i=1,o+=u}return r}(Po,jo,ko),i=document.querySelectorAll(".map").length?Ho.selectAll(".map"):wt(".chart").append("svg");i.attr("width",Ao+Oo.left+Oo.right).attr("height",To+Oo.top+Oo.bottom).attr("class","map").attr("viewBox","0 0 "+(Ao+Oo.left+Oo.right)+" "+(To+Oo.top+Oo.bottom)),bt("input").on("click",e.key.click);var o=document.querySelectorAll(".gridlines").length?Ho.selectAll(".gridlines"):i.append("g");o.attr("class","gridlines").attr("transform","translate("+Oo.left+","+Oo.top+")");document.querySelectorAll(".row").length?Ho.selectAll(".row"):o.selectAll(".row").data(r).enter().append("g").attr("class","row");var u=document.querySelectorAll(".gridmap").length?Ho.selectAll(".gridmap"):i.append("g").attr("class","gridmap").attr("transform","translate("+Oo.left+","+Oo.top+")"),a=document.querySelectorAll(".group").length?u.selectAll(".group"):u.selectAll(".group").data(t,function(t){return t.code}).enter().append("g").attr("class",function(t){return"group "+t.code});a.data(t,function(t){return t.code}).attr("x",function(t){return(t.col-1)*ko+Fo*t.col}).attr("y",function(t){return(t.row-1)*ko+Fo*t.row}).on("mouseover",e.states.mouseover).on("mouseleave",e.states.mouseleave),a.each(function(t,n,e){(document.querySelector(".state.".concat(t.code))?wt(e[n]).selectAll(".state.".concat(t.code)):wt(e[n]).selectAll(".state").data([t],function(t){return t.code}).enter().append("rect").attr("class",function(t){return"state "+t.code})).attr("stroke",function(t){return Co(t.totaldollars)}).attr("stroke-width",function(t){return Eo(t.totaldollars)}).attr("x",function(t){return(t.col-1)*ko+Fo*t.col}).attr("y",function(t){return(t.row-1)*ko+Fo*t.row}).attr("width",ko+2).attr("height",ko+2),Do=Ot().domain(No.concat(["other"])).range(Uo.map(function(t,n){var e=[];return Yo.forEach(function(t){e.push(No.concat(["other"]).indexOf(t))}),e.includes(n)?t:"#fff"}));bt(".group");var r={};No.forEach(function(n){r[n]=Array(Math.round(t[n]/100*100)).fill({state:t.code,country:n})});var i=[];No.filter(function(t){return Yo.indexOf(t)<0}).forEach(function(t){i=i.concat(r[t])}),Yo.forEach(function(t){i=i.concat(r[t])}),i=Array(100-i.length).fill({state:t.code,country:"other"}).concat(i);var o=wt(e[n]).attr("x"),u=wt(e[n]).attr("y"),a=wt(e[n]).selectAll(".percent.".concat(t.code));a.attr("height",(ko-Fo/2)/10).transition(po().duration(1200)).attr("height",0).remove(),a=wt(e[n]).selectAll(".percent.".concat(t.code)).data(i,function(t,n){return t}).enter().append("rect").attr("class","percent "+t.code).attr("fill",function(t){return Do(t.country)}).attr("x",function(t,n){var e=i.findIndex(function(t){return"other"!==t.country});return e=e>=0?e+10:null,(10*Math.ceil((n+1)/10)<=e?Math.abs(99-n):n)%10*(ko-2)/10+parseInt(o,10)+2}).attr("y",function(t,n){return Math.ceil((n+1)/10)*(ko-2)/10+parseInt(u,10)-ko/10+1+2}).attr("height",0).attr("width",(ko-Fo/2)/10).transition(po().duration(600)).attr("height",(ko-Fo/2)/10)})}Co=Ae().domain(c(t,function(t){return+t.totaldollars})).range(["#E5E5E5","#5E5E5E"]),Eo=Ae().domain(c(t,function(t){return+t.totaldollars})).range(["1","5"]),n.width=function(){if(!arguments.length)return Ao;Ao=(arguments.length<=0?void 0:arguments[0])-Oo.left-Oo.right},n.height=function(){if(!arguments.length)return To;To=(arguments.length<=0?void 0:arguments[0])-Oo.top-Oo.bottom};var e={key:{click:function(t){var n=["legend-label","active","other","all"],e=this.classList,r=e.contains("all"),i=this.checked,o=(wt("input.all").node().checked,bo(e).find(function(t){return!n.includes(t)})),u=wt("input.all").node();o&&Yo.includes(o)?(Yo=Yo.filter(function(t){return t!==o}),u.removeAttribute("disabled"),u.checked=!1):o&&Yo.push(o),4!==Yo.length?(u.checked=!1,u.removeAttribute("disabled")):(wt("input.all").node().checked=!0,u.disabled=!0),r&&i?(Yo=No,bt("input").each(function(t,n,e){e[n].checked=!0})):r&&!i&&(Yo=[],bt("input").each(function(t,n,e){e[n].checked=!1})),Ho.call(xo.drawPercents)}},states:{mouseover:function(t){e.states.showTooltip(t)},mouseleave:function(t){Mo.hide()},click:function(t){},showTooltip:function(t){var n='\n        <p class="tooltip-heading">\n          '.concat(t.state,'\n        </p>\n        <p class="tooltip-body">\n          $').concat(So(t.totaldollars).replace(/G/,"B"),' Total Trade\n        </p>\n        <ul class="tooltip-list">\n          <li class="canada">Canada: ').concat(t.canada?So(t.canada):0,'%</li>\n          <li class="china">China: ').concat(t.china?So(t.china):0,'%</li>\n          <li class="eu">EU: ').concat(t.eu?So(t.eu):0,'%</li>\n          <li class="mexico">Mexico: ').concat(t.mexico?So(t.mexico):0,'%</li>\n        </ul>\n        <p class="tooltip-footer">\n          ').concat(So(t.grandtotal),"% of Total Trade\n        </p>\n        ");Mo.show(n)}}};return{drawGridMap:n,drawPercents:function(){Do=Ot().domain(No.concat(["other"])).range(Uo.map(function(t,n){var e=[];return Yo.forEach(function(t){e.push(No.concat(["other"]).indexOf(t))}),e.includes(n)?t:"#fff"})),bt(".group").each(function(t,n,e){var r={};No.forEach(function(n){r[n]=Array(Math.round(t[n]/100*100)).fill({state:t.code,country:n})});var i=[];No.filter(function(t){return Yo.indexOf(t)<0}).forEach(function(t){i=i.concat(r[t])}),Yo.forEach(function(t){i=i.concat(r[t])}),i=Array(100-i.length).fill({state:t.code,country:"other"}).concat(i);var o=wt(e[n]).attr("x"),u=wt(e[n]).attr("y"),a=wt(e[n]).selectAll(".percent.".concat(t.code));a.attr("height",(ko-Fo/2)/10).transition(po().duration(1200)).attr("height",0).remove(),a=wt(e[n]).selectAll(".percent.".concat(t.code)).data(i,function(t,n){return t}).enter().append("rect").attr("class","percent "+t.code).attr("fill",function(t){return Do(t.country)}).attr("x",function(t,n){var e=i.findIndex(function(t){return"other"!==t.country});return e=e>=0?e+10:null,(10*Math.ceil((n+1)/10)<=e?Math.abs(99-n):n)%10*(ko-2)/10+parseInt(o,10)+2}).attr("y",function(t,n){return Math.ceil((n+1)/10)*(ko-2)/10+parseInt(u,10)-ko/10+1+2}).attr("height",0).attr("width",(ko-Fo/2)/10).transition(po().duration(600)).attr("height",(ko-Fo/2)/10);var c=wt(e[n]).selectAll(".label.".concat(t.code));c.remove(),(c=wt(e[n]).selectAll(".label.".concat(t.code)).data([t],function(t){return t.code}).enter().append("text").attr("class",function(n){return"label "+t.code})).attr("x",function(t){return(t.col-1)*ko+ko/2+Fo*t.col}).attr("y",function(t){return(t.row-1)*ko+(ko/2-3)+Fo*t.row}).style("text-anchor","middle").text(function(n){return t.code})})}}}function qo(){var t=Ho.node().offsetWidth;xo.drawGridMap.width(t),xo.drawGridMap.height(t),Ho.call(xo.drawGridMap),Ho.call(xo.drawPercents)}var Lo,$o={init:function(t){Ho.datum(t),xo=Io(t),qo()},draw:Io,resize:qo},Xo="https://spreadsheets.google.com/feeds/list/".concat("1qmhbztaMBKatqZkT4dQQsEm_j2Xl5d9Mp3zKmmdrqy4","/1/public/values?alt=json");fetch(Xo).then(function(t){return t.json()}).then(function(t){Lo=function(t){return t.map(function(t){var n=t,e={};return Object.keys(n).forEach(function(t){var r=t;r.includes("gsx$")&&(e[r.replace("gsx$","")]=n[r].$t)}),e})}(t.feed.entry)}).then(function(){var t=c(Lo,function(t){return+t.totaldollars});document.querySelector(".min").innerHTML="$"+b(",.0f")(t[0]).replace(/G/,"B"),document.querySelector(".max").innerHTML="$"+b(",.0f")(t[1]).replace(/G/,"B"),$o.init(Lo)}),window.addEventListener("resize",$o.resize)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,