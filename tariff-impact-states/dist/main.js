!function(t){var n=window.webpackHotUpdate;window.webpackHotUpdate=function(t,e){!function(t,n){if(!_[t]||!w[t])return;for(var e in w[t]=!1,n)Object.prototype.hasOwnProperty.call(n,e)&&(d[e]=n[e]);0==--v&&0===y&&A()}(t,e),n&&n(t,e)};var e,r=!0,i="7ccc206eaba47c358b89",o=1e4,u={},a=[],c=[];function l(t){var n=k[t];if(!n)return C;var r=function(r){return n.hot.active?(k[r]?-1===k[r].parents.indexOf(t)&&k[r].parents.push(t):(a=[t],e=r),-1===n.children.indexOf(r)&&n.children.push(r)):(console.warn("[HMR] unexpected require("+r+") from disposed module "+t),a=[]),C(r)},i=function(t){return{configurable:!0,enumerable:!0,get:function(){return C[t]},set:function(n){C[t]=n}}};for(var o in C)Object.prototype.hasOwnProperty.call(C,o)&&"e"!==o&&"t"!==o&&Object.defineProperty(r,o,i(o));return r.e=function(t){return"ready"===f&&h("prepare"),y++,C.e(t).then(n,function(t){throw n(),t});function n(){y--,"prepare"===f&&(m[t]||x(t),0===y&&0===v&&A())}},r.t=function(t,n){return 1&n&&(t=r(t)),C.t(t,-2&n)},r}var s=[],f="idle";function h(t){f=t;for(var n=0;n<s.length;n++)s[n].call(null,t)}var p,d,g,v=0,y=0,m={},w={},_={};function M(t){return+t+""===t?+t:t}function b(t){if("idle"!==f)throw new Error("check() is only allowed in idle status");return r=t,h("check"),function(t){return t=t||1e4,new Promise(function(n,e){if("undefined"==typeof XMLHttpRequest)return e(new Error("No browser support"));try{var r=new XMLHttpRequest,o=C.p+""+i+".hot-update.json";r.open("GET",o,!0),r.timeout=t,r.send(null)}catch(t){return e(t)}r.onreadystatechange=function(){if(4===r.readyState)if(0===r.status)e(new Error("Manifest request to "+o+" timed out."));else if(404===r.status)n();else if(200!==r.status&&304!==r.status)e(new Error("Manifest request to "+o+" failed."));else{try{var t=JSON.parse(r.responseText)}catch(t){return void e(t)}n(t)}}})}(o).then(function(t){if(!t)return h("idle"),null;w={},m={},_=t.c,g=t.h,h("prepare");var n=new Promise(function(t,n){p={resolve:t,reject:n}});d={};return x(0),"prepare"===f&&0===y&&0===v&&A(),n})}function x(t){_[t]?(w[t]=!0,v++,function(t){var n=document.getElementsByTagName("head")[0],e=document.createElement("script");e.charset="utf-8",e.src=C.p+""+t+"."+i+".hot-update.js",n.appendChild(e)}(t)):m[t]=!0}function A(){h("ready");var t=p;if(p=null,t)if(r)Promise.resolve().then(function(){return T(r)}).then(function(n){t.resolve(n)},function(n){t.reject(n)});else{var n=[];for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&n.push(M(e));t.resolve(n)}}function T(n){if("ready"!==f)throw new Error("apply() is only allowed in ready status");var e,r,o,c,l;function s(t){for(var n=[t],e={},r=n.slice().map(function(t){return{chain:[t],id:t}});r.length>0;){var i=r.pop(),o=i.id,u=i.chain;if((c=k[o])&&!c.hot._selfAccepted){if(c.hot._selfDeclined)return{type:"self-declined",chain:u,moduleId:o};if(c.hot._main)return{type:"unaccepted",chain:u,moduleId:o};for(var a=0;a<c.parents.length;a++){var l=c.parents[a],s=k[l];if(s){if(s.hot._declinedDependencies[o])return{type:"declined",chain:u.concat([l]),moduleId:o,parentId:l};-1===n.indexOf(l)&&(s.hot._acceptedDependencies[o]?(e[l]||(e[l]=[]),p(e[l],[o])):(delete e[l],n.push(l),r.push({chain:u.concat([l]),id:l})))}}}}return{type:"accepted",moduleId:t,outdatedModules:n,outdatedDependencies:e}}function p(t,n){for(var e=0;e<n.length;e++){var r=n[e];-1===t.indexOf(r)&&t.push(r)}}n=n||{};var v={},y=[],m={},w=function(){console.warn("[HMR] unexpected require("+x.moduleId+") to disposed module")};for(var b in d)if(Object.prototype.hasOwnProperty.call(d,b)){var x;l=M(b);var A=!1,T=!1,E=!1,D="";switch((x=d[b]?s(l):{type:"disposed",moduleId:b}).chain&&(D="\nUpdate propagation: "+x.chain.join(" -> ")),x.type){case"self-declined":n.onDeclined&&n.onDeclined(x),n.ignoreDeclined||(A=new Error("Aborted because of self decline: "+x.moduleId+D));break;case"declined":n.onDeclined&&n.onDeclined(x),n.ignoreDeclined||(A=new Error("Aborted because of declined dependency: "+x.moduleId+" in "+x.parentId+D));break;case"unaccepted":n.onUnaccepted&&n.onUnaccepted(x),n.ignoreUnaccepted||(A=new Error("Aborted because "+l+" is not accepted"+D));break;case"accepted":n.onAccepted&&n.onAccepted(x),T=!0;break;case"disposed":n.onDisposed&&n.onDisposed(x),E=!0;break;default:throw new Error("Unexception type "+x.type)}if(A)return h("abort"),Promise.reject(A);if(T)for(l in m[l]=d[l],p(y,x.outdatedModules),x.outdatedDependencies)Object.prototype.hasOwnProperty.call(x.outdatedDependencies,l)&&(v[l]||(v[l]=[]),p(v[l],x.outdatedDependencies[l]));E&&(p(y,[x.moduleId]),m[l]=w)}var S,N=[];for(r=0;r<y.length;r++)l=y[r],k[l]&&k[l].hot._selfAccepted&&N.push({module:l,errorHandler:k[l].hot._selfAccepted});h("dispose"),Object.keys(_).forEach(function(t){!1===_[t]&&function(t){delete installedChunks[t]}(t)});for(var U,O,j=y.slice();j.length>0;)if(l=j.pop(),c=k[l]){var H={},P=c.hot._disposeHandlers;for(o=0;o<P.length;o++)(e=P[o])(H);for(u[l]=H,c.hot.active=!1,delete k[l],delete v[l],o=0;o<c.children.length;o++){var F=k[c.children[o]];F&&((S=F.parents.indexOf(l))>=0&&F.parents.splice(S,1))}}for(l in v)if(Object.prototype.hasOwnProperty.call(v,l)&&(c=k[l]))for(O=v[l],o=0;o<O.length;o++)U=O[o],(S=c.children.indexOf(U))>=0&&c.children.splice(S,1);for(l in h("apply"),i=g,m)Object.prototype.hasOwnProperty.call(m,l)&&(t[l]=m[l]);var I=null;for(l in v)if(Object.prototype.hasOwnProperty.call(v,l)&&(c=k[l])){O=v[l];var Y=[];for(r=0;r<O.length;r++)if(U=O[r],e=c.hot._acceptedDependencies[U]){if(-1!==Y.indexOf(e))continue;Y.push(e)}for(r=0;r<Y.length;r++){e=Y[r];try{e(O)}catch(t){n.onErrored&&n.onErrored({type:"accept-errored",moduleId:l,dependencyId:O[r],error:t}),n.ignoreErrored||I||(I=t)}}}for(r=0;r<N.length;r++){var q=N[r];l=q.module,a=[l];try{C(l)}catch(t){if("function"==typeof q.errorHandler)try{q.errorHandler(t)}catch(e){n.onErrored&&n.onErrored({type:"self-accept-error-handler-errored",moduleId:l,error:e,originalError:t}),n.ignoreErrored||I||(I=e),I||(I=t)}else n.onErrored&&n.onErrored({type:"self-accept-errored",moduleId:l,error:t}),n.ignoreErrored||I||(I=t)}}return I?(h("fail"),Promise.reject(I)):(h("idle"),new Promise(function(t){t(y)}))}var k={};function C(n){if(k[n])return k[n].exports;var r=k[n]={i:n,l:!1,exports:{},hot:function(t){var n={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_disposeHandlers:[],_main:e!==t,active:!0,accept:function(t,e){if(void 0===t)n._selfAccepted=!0;else if("function"==typeof t)n._selfAccepted=t;else if("object"==typeof t)for(var r=0;r<t.length;r++)n._acceptedDependencies[t[r]]=e||function(){};else n._acceptedDependencies[t]=e||function(){}},decline:function(t){if(void 0===t)n._selfDeclined=!0;else if("object"==typeof t)for(var e=0;e<t.length;e++)n._declinedDependencies[t[e]]=!0;else n._declinedDependencies[t]=!0},dispose:function(t){n._disposeHandlers.push(t)},addDisposeHandler:function(t){n._disposeHandlers.push(t)},removeDisposeHandler:function(t){var e=n._disposeHandlers.indexOf(t);e>=0&&n._disposeHandlers.splice(e,1)},check:b,apply:T,status:function(t){if(!t)return f;s.push(t)},addStatusHandler:function(t){s.push(t)},removeStatusHandler:function(t){var n=s.indexOf(t);n>=0&&s.splice(n,1)},data:u[t]};return e=void 0,n}(n),parents:(c=a,a=[],c),children:[]};return t[n].call(r.exports,r,r.exports,l(n)),r.l=!0,r.exports}C.m=t,C.c=k,C.d=function(t,n,e){C.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:e})},C.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},C.t=function(t,n){if(1&n&&(t=C(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var e=Object.create(null);if(C.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)C.d(e,r,function(n){return t[n]}.bind(null,r));return e},C.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return C.d(n,"a",n),n},C.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},C.p="",C.h=function(){return i},l(1)(C.s=1)}([function(t,n,e){},function(t,n,e){"use strict";e.r(n);e(0);var r=function(t,n){return t<n?-1:t>n?1:t>=n?0:NaN},i=function(t){return 1===t.length&&(t=function(t){return function(n,e){return r(t(n),e)}}(t)),{left:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)<0?r=o+1:i=o}return r},right:function(n,e,r,i){for(null==r&&(r=0),null==i&&(i=n.length);r<i;){var o=r+i>>>1;t(n[o],e)>0?i=o:r=o+1}return r}}};var o=i(r),u=o.right,a=(o.left,u);var c=function(t,n){var e,r,i,o=t.length,u=-1;if(null==n){for(;++u<o;)if(null!=(e=t[u])&&e>=e)for(r=i=e;++u<o;)null!=(e=t[u])&&(r>e&&(r=e),i<e&&(i=e))}else for(;++u<o;)if(null!=(e=n(t[u],u,t))&&e>=e)for(r=i=e;++u<o;)null!=(e=n(t[u],u,t))&&(r>e&&(r=e),i<e&&(i=e));return[r,i]},l=Array.prototype,s=(l.slice,l.map,Math.sqrt(50)),f=Math.sqrt(10),h=Math.sqrt(2),p=function(t,n,e){var r,i,o,u,a=-1;if(e=+e,(t=+t)===(n=+n)&&e>0)return[t];if((r=n<t)&&(i=t,t=n,n=i),0===(u=d(t,n,e))||!isFinite(u))return[];if(u>0)for(t=Math.ceil(t/u),n=Math.floor(n/u),o=new Array(i=Math.ceil(n-t+1));++a<i;)o[a]=(t+a)*u;else for(t=Math.floor(t*u),n=Math.ceil(n*u),o=new Array(i=Math.ceil(t-n+1));++a<i;)o[a]=(t-a)/u;return r&&o.reverse(),o};function d(t,n,e){var r=(n-t)/Math.max(0,e),i=Math.floor(Math.log(r)/Math.LN10),o=r/Math.pow(10,i);return i>=0?(o>=s?10:o>=f?5:o>=h?2:1)*Math.pow(10,i):-Math.pow(10,-i)/(o>=s?10:o>=f?5:o>=h?2:1)}var g=function(t,n){if((e=(t=n?t.toExponential(n-1):t.toExponential()).indexOf("e"))<0)return null;var e,r=t.slice(0,e);return[r.length>1?r[0]+r.slice(2):r,+t.slice(e+1)]},v=function(t){return(t=g(Math.abs(t)))?t[1]:NaN},y=/^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;function m(t){return new w(t)}function w(t){if(!(n=y.exec(t)))throw new Error("invalid format: "+t);var n;this.fill=n[1]||" ",this.align=n[2]||">",this.sign=n[3]||"-",this.symbol=n[4]||"",this.zero=!!n[5],this.width=n[6]&&+n[6],this.comma=!!n[7],this.precision=n[8]&&+n[8].slice(1),this.trim=!!n[9],this.type=n[10]||""}m.prototype=w.prototype,w.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+(this.trim?"~":"")+this.type};var _,M,b,x=function(t){t:for(var n,e=t.length,r=1,i=-1;r<e;++r)switch(t[r]){case".":i=n=r;break;case"0":0===i&&(i=r),n=r;break;default:if(i>0){if(!+t[r])break t;i=0}}return i>0?t.slice(0,i)+t.slice(n+1):t},A=function(t,n){var e=g(t,n);if(!e)return t+"";var r=e[0],i=e[1];return i<0?"0."+new Array(-i).join("0")+r:r.length>i+1?r.slice(0,i+1)+"."+r.slice(i+1):r+new Array(i-r.length+2).join("0")},T={"%":function(t,n){return(100*t).toFixed(n)},b:function(t){return Math.round(t).toString(2)},c:function(t){return t+""},d:function(t){return Math.round(t).toString(10)},e:function(t,n){return t.toExponential(n)},f:function(t,n){return t.toFixed(n)},g:function(t,n){return t.toPrecision(n)},o:function(t){return Math.round(t).toString(8)},p:function(t,n){return A(100*t,n)},r:A,s:function(t,n){var e=g(t,n);if(!e)return t+"";var r=e[0],i=e[1],o=i-(_=3*Math.max(-8,Math.min(8,Math.floor(i/3))))+1,u=r.length;return o===u?r:o>u?r+new Array(o-u+1).join("0"):o>0?r.slice(0,o)+"."+r.slice(o):"0."+new Array(1-o).join("0")+g(t,Math.max(0,n+o-1))[0]},X:function(t){return Math.round(t).toString(16).toUpperCase()},x:function(t){return Math.round(t).toString(16)}},k=function(t){return t},C=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"],E=function(t){var n=t.grouping&&t.thousands?function(t,n){return function(e,r){for(var i=e.length,o=[],u=0,a=t[0],c=0;i>0&&a>0&&(c+a+1>r&&(a=Math.max(1,r-c)),o.push(e.substring(i-=a,i+a)),!((c+=a+1)>r));)a=t[u=(u+1)%t.length];return o.reverse().join(n)}}(t.grouping,t.thousands):k,e=t.currency,r=t.decimal,i=t.numerals?function(t){return function(n){return n.replace(/[0-9]/g,function(n){return t[+n]})}}(t.numerals):k,o=t.percent||"%";function u(t){var u=(t=m(t)).fill,a=t.align,c=t.sign,l=t.symbol,s=t.zero,f=t.width,h=t.comma,p=t.precision,d=t.trim,g=t.type;"n"===g?(h=!0,g="g"):T[g]||(null==p&&(p=12),d=!0,g="g"),(s||"0"===u&&"="===a)&&(s=!0,u="0",a="=");var v="$"===l?e[0]:"#"===l&&/[boxX]/.test(g)?"0"+g.toLowerCase():"",y="$"===l?e[1]:/[%p]/.test(g)?o:"",w=T[g],M=/[defgprs%]/.test(g);function b(t){var e,o,l,m=v,b=y;if("c"===g)b=w(t)+b,t="";else{var A=(t=+t)<0;if(t=w(Math.abs(t),p),d&&(t=x(t)),A&&0==+t&&(A=!1),m=(A?"("===c?c:"-":"-"===c||"("===c?"":c)+m,b=("s"===g?C[8+_/3]:"")+b+(A&&"("===c?")":""),M)for(e=-1,o=t.length;++e<o;)if(48>(l=t.charCodeAt(e))||l>57){b=(46===l?r+t.slice(e+1):t.slice(e))+b,t=t.slice(0,e);break}}h&&!s&&(t=n(t,1/0));var T=m.length+t.length+b.length,k=T<f?new Array(f-T+1).join(u):"";switch(h&&s&&(t=n(k+t,k.length?f-b.length:1/0),k=""),a){case"<":t=m+t+b+k;break;case"=":t=m+k+t+b;break;case"^":t=k.slice(0,T=k.length>>1)+m+t+b+k.slice(T);break;default:t=k+m+t+b}return i(t)}return p=null==p?6:/[gprs]/.test(g)?Math.max(1,Math.min(21,p)):Math.max(0,Math.min(20,p)),b.toString=function(){return t+""},b}return{format:u,formatPrefix:function(t,n){var e=u(((t=m(t)).type="f",t)),r=3*Math.max(-8,Math.min(8,Math.floor(v(n)/3))),i=Math.pow(10,-r),o=C[8+r/3];return function(t){return e(i*t)+o}}}};!function(t){M=E(t),b=M.format,M.formatPrefix}({decimal:".",thousands:",",grouping:[3],currency:["$",""]});var D={},S={},N=34,U=10,O=13;function j(t){return new Function("d","return {"+t.map(function(t,n){return JSON.stringify(t)+": d["+n+"]"}).join(",")+"}")}var H=function(t){var n=new RegExp('["'+t+"\n\r]"),e=t.charCodeAt(0);function r(t,n){var r,i=[],o=t.length,u=0,a=0,c=o<=0,l=!1;function s(){if(c)return S;if(l)return l=!1,D;var n,r,i=u;if(t.charCodeAt(i)===N){for(;u++<o&&t.charCodeAt(u)!==N||t.charCodeAt(++u)===N;);return(n=u)>=o?c=!0:(r=t.charCodeAt(u++))===U?l=!0:r===O&&(l=!0,t.charCodeAt(u)===U&&++u),t.slice(i+1,n-1).replace(/""/g,'"')}for(;u<o;){if((r=t.charCodeAt(n=u++))===U)l=!0;else if(r===O)l=!0,t.charCodeAt(u)===U&&++u;else if(r!==e)continue;return t.slice(i,n)}return c=!0,t.slice(i,o)}for(t.charCodeAt(o-1)===U&&--o,t.charCodeAt(o-1)===O&&--o;(r=s())!==S;){for(var f=[];r!==D&&r!==S;)f.push(r),r=s();n&&null==(f=n(f,a++))||i.push(f)}return i}function i(n){return n.map(o).join(t)}function o(t){return null==t?"":n.test(t+="")?'"'+t.replace(/"/g,'""')+'"':t}return{parse:function(t,n){var e,i,o=r(t,function(t,r){if(e)return e(t,r-1);i=t,e=n?function(t,n){var e=j(t);return function(r,i){return n(e(r),i,t)}}(t,n):j(t)});return o.columns=i||[],o},parseRows:r,format:function(n,e){return null==e&&(e=function(t){var n=Object.create(null),e=[];return t.forEach(function(t){for(var r in t)r in n||e.push(n[r]=r)}),e}(n)),[e.map(o).join(t)].concat(n.map(function(n){return e.map(function(t){return o(n[t])}).join(t)})).join("\n")},formatRows:function(t){return t.map(i).join("\n")}}},P=H(","),F=P.parse,I=(P.parseRows,P.format,P.formatRows,H("\t")),Y=I.parse;I.parseRows,I.format,I.formatRows;function q(t){if(!t.ok)throw new Error(t.status+" "+t.statusText);return t.text()}var L=function(t,n){return fetch(t,n).then(q)};function $(t){return function(n,e,r){return 2===arguments.length&&"function"==typeof e&&(r=e,e=void 0),L(n,e).then(function(n){return t(n,r)})}}var X=$(F),z=($(Y),"http://www.w3.org/1999/xhtml"),R={svg:"http://www.w3.org/2000/svg",xhtml:z,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},B=function(t){var n=t+="",e=n.indexOf(":");return e>=0&&"xmlns"!==(n=t.slice(0,e))&&(t=t.slice(e+1)),R.hasOwnProperty(n)?{space:R[n],local:t}:t};var V=function(t){var n=B(t);return(n.local?function(t){return function(){return this.ownerDocument.createElementNS(t.space,t.local)}}:function(t){return function(){var n=this.ownerDocument,e=this.namespaceURI;return e===z&&n.documentElement.namespaceURI===z?n.createElement(t):n.createElementNS(e,t)}})(n)};function Z(){}var W=function(t){return null==t?Z:function(){return this.querySelector(t)}};function G(){return[]}var J=function(t){return null==t?G:function(){return this.querySelectorAll(t)}},Q=function(t){return function(){return this.matches(t)}};if("undefined"!=typeof document){var K=document.documentElement;if(!K.matches){var tt=K.webkitMatchesSelector||K.msMatchesSelector||K.mozMatchesSelector||K.oMatchesSelector;Q=function(t){return function(){return tt.call(this,t)}}}}var nt=Q,et=function(t){return new Array(t.length)};function rt(t,n){this.ownerDocument=t.ownerDocument,this.namespaceURI=t.namespaceURI,this._next=null,this._parent=t,this.__data__=n}rt.prototype={constructor:rt,appendChild:function(t){return this._parent.insertBefore(t,this._next)},insertBefore:function(t,n){return this._parent.insertBefore(t,n)},querySelector:function(t){return this._parent.querySelector(t)},querySelectorAll:function(t){return this._parent.querySelectorAll(t)}};var it="$";function ot(t,n,e,r,i,o){for(var u,a=0,c=n.length,l=o.length;a<l;++a)(u=n[a])?(u.__data__=o[a],r[a]=u):e[a]=new rt(t,o[a]);for(;a<c;++a)(u=n[a])&&(i[a]=u)}function ut(t,n,e,r,i,o,u){var a,c,l,s={},f=n.length,h=o.length,p=new Array(f);for(a=0;a<f;++a)(c=n[a])&&(p[a]=l=it+u.call(c,c.__data__,a,n),l in s?i[a]=c:s[l]=c);for(a=0;a<h;++a)(c=s[l=it+u.call(t,o[a],a,o)])?(r[a]=c,c.__data__=o[a],s[l]=null):e[a]=new rt(t,o[a]);for(a=0;a<f;++a)(c=n[a])&&s[p[a]]===c&&(i[a]=c)}function at(t,n){return t<n?-1:t>n?1:t>=n?0:NaN}var ct=function(t){return t.ownerDocument&&t.ownerDocument.defaultView||t.document&&t||t.defaultView};function lt(t,n){return t.style.getPropertyValue(n)||ct(t).getComputedStyle(t,null).getPropertyValue(n)}function st(t){return t.trim().split(/^|\s+/)}function ft(t){return t.classList||new ht(t)}function ht(t){this._node=t,this._names=st(t.getAttribute("class")||"")}function pt(t,n){for(var e=ft(t),r=-1,i=n.length;++r<i;)e.add(n[r])}function dt(t,n){for(var e=ft(t),r=-1,i=n.length;++r<i;)e.remove(n[r])}ht.prototype={add:function(t){this._names.indexOf(t)<0&&(this._names.push(t),this._node.setAttribute("class",this._names.join(" ")))},remove:function(t){var n=this._names.indexOf(t);n>=0&&(this._names.splice(n,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(t){return this._names.indexOf(t)>=0}};function gt(){this.textContent=""}function vt(){this.innerHTML=""}function yt(){this.nextSibling&&this.parentNode.appendChild(this)}function mt(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function wt(){return null}function _t(){var t=this.parentNode;t&&t.removeChild(this)}function Mt(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function bt(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var xt={},At=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(xt={mouseenter:"mouseover",mouseleave:"mouseout"}));function Tt(t,n,e){return t=kt(t,n,e),function(n){var e=n.relatedTarget;e&&(e===this||8&e.compareDocumentPosition(this))||t.call(this,n)}}function kt(t,n,e){return function(r){var i=At;At=r;try{t.call(this,this.__data__,n,e)}finally{At=i}}}function Ct(t){return function(){var n=this.__on;if(n){for(var e,r=0,i=-1,o=n.length;r<o;++r)e=n[r],t.type&&e.type!==t.type||e.name!==t.name?n[++i]=e:this.removeEventListener(e.type,e.listener,e.capture);++i?n.length=i:delete this.__on}}}function Et(t,n,e){var r=xt.hasOwnProperty(t.type)?Tt:kt;return function(i,o,u){var a,c=this.__on,l=r(n,o,u);if(c)for(var s=0,f=c.length;s<f;++s)if((a=c[s]).type===t.type&&a.name===t.name)return this.removeEventListener(a.type,a.listener,a.capture),this.addEventListener(a.type,a.listener=l,a.capture=e),void(a.value=n);this.addEventListener(t.type,l,e),a={type:t.type,name:t.name,value:n,listener:l,capture:e},c?c.push(a):this.__on=[a]}}function Dt(t,n,e){var r=ct(t),i=r.CustomEvent;"function"==typeof i?i=new i(n,e):(i=r.document.createEvent("Event"),e?(i.initEvent(n,e.bubbles,e.cancelable),i.detail=e.detail):i.initEvent(n,!1,!1)),t.dispatchEvent(i)}var St=[null];function Nt(t,n){this._groups=t,this._parents=n}function Ut(){return new Nt([[document.documentElement]],St)}Nt.prototype=Ut.prototype={constructor:Nt,select:function(t){"function"!=typeof t&&(t=W(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u,a=n[i],c=a.length,l=r[i]=new Array(c),s=0;s<c;++s)(o=a[s])&&(u=t.call(o,o.__data__,s,a))&&("__data__"in o&&(u.__data__=o.__data__),l[s]=u);return new Nt(r,this._parents)},selectAll:function(t){"function"!=typeof t&&(t=J(t));for(var n=this._groups,e=n.length,r=[],i=[],o=0;o<e;++o)for(var u,a=n[o],c=a.length,l=0;l<c;++l)(u=a[l])&&(r.push(t.call(u,u.__data__,l,a)),i.push(u));return new Nt(r,i)},filter:function(t){"function"!=typeof t&&(t=nt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],l=0;l<a;++l)(o=u[l])&&t.call(o,o.__data__,l,u)&&c.push(o);return new Nt(r,this._parents)},data:function(t,n){if(!t)return p=new Array(this.size()),l=-1,this.each(function(t){p[++l]=t}),p;var e=n?ut:ot,r=this._parents,i=this._groups;"function"!=typeof t&&(t=function(t){return function(){return t}}(t));for(var o=i.length,u=new Array(o),a=new Array(o),c=new Array(o),l=0;l<o;++l){var s=r[l],f=i[l],h=f.length,p=t.call(s,s&&s.__data__,l,r),d=p.length,g=a[l]=new Array(d),v=u[l]=new Array(d);e(s,f,g,v,c[l]=new Array(h),p,n);for(var y,m,w=0,_=0;w<d;++w)if(y=g[w]){for(w>=_&&(_=w+1);!(m=v[_])&&++_<d;);y._next=m||null}}return(u=new Nt(u,r))._enter=a,u._exit=c,u},enter:function(){return new Nt(this._enter||this._groups.map(et),this._parents)},exit:function(){return new Nt(this._exit||this._groups.map(et),this._parents)},merge:function(t){for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,l=n[a],s=e[a],f=l.length,h=u[a]=new Array(f),p=0;p<f;++p)(c=l[p]||s[p])&&(h[p]=c);for(;a<r;++a)u[a]=n[a];return new Nt(u,this._parents)},order:function(){for(var t=this._groups,n=-1,e=t.length;++n<e;)for(var r,i=t[n],o=i.length-1,u=i[o];--o>=0;)(r=i[o])&&(u&&u!==r.nextSibling&&u.parentNode.insertBefore(r,u),u=r);return this},sort:function(t){function n(n,e){return n&&e?t(n.__data__,e.__data__):!n-!e}t||(t=at);for(var e=this._groups,r=e.length,i=new Array(r),o=0;o<r;++o){for(var u,a=e[o],c=a.length,l=i[o]=new Array(c),s=0;s<c;++s)(u=a[s])&&(l[s]=u);l.sort(n)}return new Nt(i,this._parents).order()},call:function(){var t=arguments[0];return arguments[0]=this,t.apply(null,arguments),this},nodes:function(){var t=new Array(this.size()),n=-1;return this.each(function(){t[++n]=this}),t},node:function(){for(var t=this._groups,n=0,e=t.length;n<e;++n)for(var r=t[n],i=0,o=r.length;i<o;++i){var u=r[i];if(u)return u}return null},size:function(){var t=0;return this.each(function(){++t}),t},empty:function(){return!this.node()},each:function(t){for(var n=this._groups,e=0,r=n.length;e<r;++e)for(var i,o=n[e],u=0,a=o.length;u<a;++u)(i=o[u])&&t.call(i,i.__data__,u,o);return this},attr:function(t,n){var e=B(t);if(arguments.length<2){var r=this.node();return e.local?r.getAttributeNS(e.space,e.local):r.getAttribute(e)}return this.each((null==n?e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}}:"function"==typeof n?e.local?function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttributeNS(t.space,t.local):this.setAttributeNS(t.space,t.local,e)}}:function(t,n){return function(){var e=n.apply(this,arguments);null==e?this.removeAttribute(t):this.setAttribute(t,e)}}:e.local?function(t,n){return function(){this.setAttributeNS(t.space,t.local,n)}}:function(t,n){return function(){this.setAttribute(t,n)}})(e,n))},style:function(t,n,e){return arguments.length>1?this.each((null==n?function(t){return function(){this.style.removeProperty(t)}}:"function"==typeof n?function(t,n,e){return function(){var r=n.apply(this,arguments);null==r?this.style.removeProperty(t):this.style.setProperty(t,r,e)}}:function(t,n,e){return function(){this.style.setProperty(t,n,e)}})(t,n,null==e?"":e)):lt(this.node(),t)},property:function(t,n){return arguments.length>1?this.each((null==n?function(t){return function(){delete this[t]}}:"function"==typeof n?function(t,n){return function(){var e=n.apply(this,arguments);null==e?delete this[t]:this[t]=e}}:function(t,n){return function(){this[t]=n}})(t,n)):this.node()[t]},classed:function(t,n){var e=st(t+"");if(arguments.length<2){for(var r=ft(this.node()),i=-1,o=e.length;++i<o;)if(!r.contains(e[i]))return!1;return!0}return this.each(("function"==typeof n?function(t,n){return function(){(n.apply(this,arguments)?pt:dt)(this,t)}}:n?function(t){return function(){pt(this,t)}}:function(t){return function(){dt(this,t)}})(e,n))},text:function(t){return arguments.length?this.each(null==t?gt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.textContent=null==n?"":n}}:function(t){return function(){this.textContent=t}})(t)):this.node().textContent},html:function(t){return arguments.length?this.each(null==t?vt:("function"==typeof t?function(t){return function(){var n=t.apply(this,arguments);this.innerHTML=null==n?"":n}}:function(t){return function(){this.innerHTML=t}})(t)):this.node().innerHTML},raise:function(){return this.each(yt)},lower:function(){return this.each(mt)},append:function(t){var n="function"==typeof t?t:V(t);return this.select(function(){return this.appendChild(n.apply(this,arguments))})},insert:function(t,n){var e="function"==typeof t?t:V(t),r=null==n?wt:"function"==typeof n?n:W(n);return this.select(function(){return this.insertBefore(e.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(_t)},clone:function(t){return this.select(t?bt:Mt)},datum:function(t){return arguments.length?this.property("__data__",t):this.node().__data__},on:function(t,n,e){var r,i,o=function(t){return t.trim().split(/^|\s+/).map(function(t){var n="",e=t.indexOf(".");return e>=0&&(n=t.slice(e+1),t=t.slice(0,e)),{type:t,name:n}})}(t+""),u=o.length;if(!(arguments.length<2)){for(a=n?Et:Ct,null==e&&(e=!1),r=0;r<u;++r)this.each(a(o[r],n,e));return this}var a=this.node().__on;if(a)for(var c,l=0,s=a.length;l<s;++l)for(r=0,c=a[l];r<u;++r)if((i=o[r]).type===c.type&&i.name===c.name)return c.value},dispatch:function(t,n){return this.each(("function"==typeof n?function(t,n){return function(){return Dt(this,t,n.apply(this,arguments))}}:function(t,n){return function(){return Dt(this,t,n)}})(t,n))}};var Ot=Ut,jt=function(t){return"string"==typeof t?new Nt([[document.querySelector(t)]],[document.documentElement]):new Nt([[t]],St)},Ht=0;function Pt(){this._="@"+(++Ht).toString(36)}Pt.prototype=function(){return new Pt}.prototype={constructor:Pt,get:function(t){for(var n=this._;!(n in t);)if(!(t=t.parentNode))return;return t[n]},set:function(t,n){return t[this._]=n},remove:function(t){return this._ in t&&delete t[this._]},toString:function(){return this._}};var Ft=function(t){return"string"==typeof t?new Nt([document.querySelectorAll(t)],[document.documentElement]):new Nt([null==t?[]:t],St)};function It(){}function Yt(t,n){var e=new It;if(t instanceof It)t.each(function(t,n){e.set(n,t)});else if(Array.isArray(t)){var r,i=-1,o=t.length;if(null==n)for(;++i<o;)e.set(i,t[i]);else for(;++i<o;)e.set(n(r=t[i],i,t),r)}else if(t)for(var u in t)e.set(u,t[u]);return e}It.prototype=Yt.prototype={constructor:It,has:function(t){return"$"+t in this},get:function(t){return this["$"+t]},set:function(t,n){return this["$"+t]=n,this},remove:function(t){var n="$"+t;return n in this&&delete this[n]},clear:function(){for(var t in this)"$"===t[0]&&delete this[t]},keys:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(n.slice(1));return t},values:function(){var t=[];for(var n in this)"$"===n[0]&&t.push(this[n]);return t},entries:function(){var t=[];for(var n in this)"$"===n[0]&&t.push({key:n.slice(1),value:this[n]});return t},size:function(){var t=0;for(var n in this)"$"===n[0]&&++t;return t},empty:function(){for(var t in this)if("$"===t[0])return!1;return!0},each:function(t){for(var n in this)"$"===n[0]&&t(this[n],n.slice(1),this)}};var qt=Yt;function Lt(){}var $t=qt.prototype;function Xt(t,n){var e=new Lt;if(t instanceof Lt)t.each(function(t){e.add(t)});else if(t){var r=-1,i=t.length;if(null==n)for(;++r<i;)e.add(t[r]);else for(;++r<i;)e.add(n(t[r],r,t))}return e}Lt.prototype=Xt.prototype={constructor:Lt,has:$t.has,add:function(t){return this["$"+(t+="")]=t,this},remove:$t.remove,clear:$t.clear,values:$t.keys,size:$t.size,empty:$t.empty,each:$t.each};var zt=Array.prototype,Rt=zt.map,Bt=zt.slice,Vt={name:"implicit"};function Zt(t){var n=qt(),e=[],r=Vt;function i(i){var o=i+"",u=n.get(o);if(!u){if(r!==Vt)return r;n.set(o,u=e.push(i))}return t[(u-1)%t.length]}return t=null==t?[]:Bt.call(t),i.domain=function(t){if(!arguments.length)return e.slice();e=[],n=qt();for(var r,o,u=-1,a=t.length;++u<a;)n.has(o=(r=t[u])+"")||n.set(o,e.push(r));return i},i.range=function(n){return arguments.length?(t=Bt.call(n),i):t.slice()},i.unknown=function(t){return arguments.length?(r=t,i):r},i.copy=function(){return Zt().domain(e).range(t).unknown(r)},i}var Wt=function(t,n,e){t.prototype=n.prototype=e,e.constructor=t};function Gt(t,n){var e=Object.create(t.prototype);for(var r in n)e[r]=n[r];return e}function Jt(){}var Qt="\\s*([+-]?\\d+)\\s*",Kt="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",tn="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",nn=/^#([0-9a-f]{3})$/,en=/^#([0-9a-f]{6})$/,rn=new RegExp("^rgb\\("+[Qt,Qt,Qt]+"\\)$"),on=new RegExp("^rgb\\("+[tn,tn,tn]+"\\)$"),un=new RegExp("^rgba\\("+[Qt,Qt,Qt,Kt]+"\\)$"),an=new RegExp("^rgba\\("+[tn,tn,tn,Kt]+"\\)$"),cn=new RegExp("^hsl\\("+[Kt,tn,tn]+"\\)$"),ln=new RegExp("^hsla\\("+[Kt,tn,tn,Kt]+"\\)$"),sn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function fn(t){var n;return t=(t+"").trim().toLowerCase(),(n=nn.exec(t))?new vn((n=parseInt(n[1],16))>>8&15|n>>4&240,n>>4&15|240&n,(15&n)<<4|15&n,1):(n=en.exec(t))?hn(parseInt(n[1],16)):(n=rn.exec(t))?new vn(n[1],n[2],n[3],1):(n=on.exec(t))?new vn(255*n[1]/100,255*n[2]/100,255*n[3]/100,1):(n=un.exec(t))?pn(n[1],n[2],n[3],n[4]):(n=an.exec(t))?pn(255*n[1]/100,255*n[2]/100,255*n[3]/100,n[4]):(n=cn.exec(t))?mn(n[1],n[2]/100,n[3]/100,1):(n=ln.exec(t))?mn(n[1],n[2]/100,n[3]/100,n[4]):sn.hasOwnProperty(t)?hn(sn[t]):"transparent"===t?new vn(NaN,NaN,NaN,0):null}function hn(t){return new vn(t>>16&255,t>>8&255,255&t,1)}function pn(t,n,e,r){return r<=0&&(t=n=e=NaN),new vn(t,n,e,r)}function dn(t){return t instanceof Jt||(t=fn(t)),t?new vn((t=t.rgb()).r,t.g,t.b,t.opacity):new vn}function gn(t,n,e,r){return 1===arguments.length?dn(t):new vn(t,n,e,null==r?1:r)}function vn(t,n,e,r){this.r=+t,this.g=+n,this.b=+e,this.opacity=+r}function yn(t){return((t=Math.max(0,Math.min(255,Math.round(t)||0)))<16?"0":"")+t.toString(16)}function mn(t,n,e,r){return r<=0?t=n=e=NaN:e<=0||e>=1?t=n=NaN:n<=0&&(t=NaN),new _n(t,n,e,r)}function wn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof _n)return new _n(t.h,t.s,t.l,t.opacity);if(t instanceof Jt||(t=fn(t)),!t)return new _n;if(t instanceof _n)return t;var n=(t=t.rgb()).r/255,e=t.g/255,r=t.b/255,i=Math.min(n,e,r),o=Math.max(n,e,r),u=NaN,a=o-i,c=(o+i)/2;return a?(u=n===o?(e-r)/a+6*(e<r):e===o?(r-n)/a+2:(n-e)/a+4,a/=c<.5?o+i:2-o-i,u*=60):a=c>0&&c<1?0:u,new _n(u,a,c,t.opacity)}(t):new _n(t,n,e,null==r?1:r)}function _n(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Mn(t,n,e){return 255*(t<60?n+(e-n)*t/60:t<180?e:t<240?n+(e-n)*(240-t)/60:n)}Wt(Jt,fn,{displayable:function(){return this.rgb().displayable()},hex:function(){return this.rgb().hex()},toString:function(){return this.rgb()+""}}),Wt(vn,gn,Gt(Jt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new vn(this.r*t,this.g*t,this.b*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new vn(this.r*t,this.g*t,this.b*t,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},hex:function(){return"#"+yn(this.r)+yn(this.g)+yn(this.b)},toString:function(){var t=this.opacity;return(1===(t=isNaN(t)?1:Math.max(0,Math.min(1,t)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===t?")":", "+t+")")}})),Wt(_n,wn,Gt(Jt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new _n(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new _n(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=this.h%360+360*(this.h<0),n=isNaN(t)||isNaN(this.s)?0:this.s,e=this.l,r=e+(e<.5?e:1-e)*n,i=2*e-r;return new vn(Mn(t>=240?t-240:t+120,i,r),Mn(t,i,r),Mn(t<120?t+240:t-120,i,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var bn=Math.PI/180,xn=180/Math.PI,An=.96422,Tn=1,kn=.82521,Cn=4/29,En=6/29,Dn=3*En*En,Sn=En*En*En;function Nn(t){if(t instanceof On)return new On(t.l,t.a,t.b,t.opacity);if(t instanceof qn){if(isNaN(t.h))return new On(t.l,0,0,t.opacity);var n=t.h*bn;return new On(t.l,Math.cos(n)*t.c,Math.sin(n)*t.c,t.opacity)}t instanceof vn||(t=dn(t));var e,r,i=Fn(t.r),o=Fn(t.g),u=Fn(t.b),a=jn((.2225045*i+.7168786*o+.0606169*u)/Tn);return i===o&&o===u?e=r=a:(e=jn((.4360747*i+.3850649*o+.1430804*u)/An),r=jn((.0139322*i+.0971045*o+.7141733*u)/kn)),new On(116*a-16,500*(e-a),200*(a-r),t.opacity)}function Un(t,n,e,r){return 1===arguments.length?Nn(t):new On(t,n,e,null==r?1:r)}function On(t,n,e,r){this.l=+t,this.a=+n,this.b=+e,this.opacity=+r}function jn(t){return t>Sn?Math.pow(t,1/3):t/Dn+Cn}function Hn(t){return t>En?t*t*t:Dn*(t-Cn)}function Pn(t){return 255*(t<=.0031308?12.92*t:1.055*Math.pow(t,1/2.4)-.055)}function Fn(t){return(t/=255)<=.04045?t/12.92:Math.pow((t+.055)/1.055,2.4)}function In(t){if(t instanceof qn)return new qn(t.h,t.c,t.l,t.opacity);if(t instanceof On||(t=Nn(t)),0===t.a&&0===t.b)return new qn(NaN,0,t.l,t.opacity);var n=Math.atan2(t.b,t.a)*xn;return new qn(n<0?n+360:n,Math.sqrt(t.a*t.a+t.b*t.b),t.l,t.opacity)}function Yn(t,n,e,r){return 1===arguments.length?In(t):new qn(t,n,e,null==r?1:r)}function qn(t,n,e,r){this.h=+t,this.c=+n,this.l=+e,this.opacity=+r}Wt(On,Un,Gt(Jt,{brighter:function(t){return new On(this.l+18*(null==t?1:t),this.a,this.b,this.opacity)},darker:function(t){return new On(this.l-18*(null==t?1:t),this.a,this.b,this.opacity)},rgb:function(){var t=(this.l+16)/116,n=isNaN(this.a)?t:t+this.a/500,e=isNaN(this.b)?t:t-this.b/200;return new vn(Pn(3.1338561*(n=An*Hn(n))-1.6168667*(t=Tn*Hn(t))-.4906146*(e=kn*Hn(e))),Pn(-.9787684*n+1.9161415*t+.033454*e),Pn(.0719453*n-.2289914*t+1.4052427*e),this.opacity)}})),Wt(qn,Yn,Gt(Jt,{brighter:function(t){return new qn(this.h,this.c,this.l+18*(null==t?1:t),this.opacity)},darker:function(t){return new qn(this.h,this.c,this.l-18*(null==t?1:t),this.opacity)},rgb:function(){return Nn(this).rgb()}}));var Ln=-.14861,$n=1.78277,Xn=-.29227,zn=-.90649,Rn=1.97294,Bn=Rn*zn,Vn=Rn*$n,Zn=$n*Xn-zn*Ln;function Wn(t,n,e,r){return 1===arguments.length?function(t){if(t instanceof Gn)return new Gn(t.h,t.s,t.l,t.opacity);t instanceof vn||(t=dn(t));var n=t.r/255,e=t.g/255,r=t.b/255,i=(Zn*r+Bn*n-Vn*e)/(Zn+Bn-Vn),o=r-i,u=(Rn*(e-i)-Xn*o)/zn,a=Math.sqrt(u*u+o*o)/(Rn*i*(1-i)),c=a?Math.atan2(u,o)*xn-120:NaN;return new Gn(c<0?c+360:c,a,i,t.opacity)}(t):new Gn(t,n,e,null==r?1:r)}function Gn(t,n,e,r){this.h=+t,this.s=+n,this.l=+e,this.opacity=+r}function Jn(t,n,e,r,i){var o=t*t,u=o*t;return((1-3*t+3*o-u)*n+(4-6*o+3*u)*e+(1+3*t+3*o-3*u)*r+u*i)/6}Wt(Gn,Wn,Gt(Jt,{brighter:function(t){return t=null==t?1/.7:Math.pow(1/.7,t),new Gn(this.h,this.s,this.l*t,this.opacity)},darker:function(t){return t=null==t?.7:Math.pow(.7,t),new Gn(this.h,this.s,this.l*t,this.opacity)},rgb:function(){var t=isNaN(this.h)?0:(this.h+120)*bn,n=+this.l,e=isNaN(this.s)?0:this.s*n*(1-n),r=Math.cos(t),i=Math.sin(t);return new vn(255*(n+e*(Ln*r+$n*i)),255*(n+e*(Xn*r+zn*i)),255*(n+e*(Rn*r)),this.opacity)}}));var Qn=function(t){return function(){return t}};function Kn(t,n){return function(e){return t+e*n}}function te(t,n){var e=n-t;return e?Kn(t,e>180||e<-180?e-360*Math.round(e/360):e):Qn(isNaN(t)?n:t)}function ne(t){return 1==(t=+t)?ee:function(n,e){return e-n?function(t,n,e){return t=Math.pow(t,e),n=Math.pow(n,e)-t,e=1/e,function(r){return Math.pow(t+r*n,e)}}(n,e,t):Qn(isNaN(n)?e:n)}}function ee(t,n){var e=n-t;return e?Kn(t,e):Qn(isNaN(t)?n:t)}var re=function t(n){var e=ne(n);function r(t,n){var r=e((t=gn(t)).r,(n=gn(n)).r),i=e(t.g,n.g),o=e(t.b,n.b),u=ee(t.opacity,n.opacity);return function(n){return t.r=r(n),t.g=i(n),t.b=o(n),t.opacity=u(n),t+""}}return r.gamma=t,r}(1);function ie(t){return function(n){var e,r,i=n.length,o=new Array(i),u=new Array(i),a=new Array(i);for(e=0;e<i;++e)r=gn(n[e]),o[e]=r.r||0,u[e]=r.g||0,a[e]=r.b||0;return o=t(o),u=t(u),a=t(a),r.opacity=1,function(t){return r.r=o(t),r.g=u(t),r.b=a(t),r+""}}}ie(function(t){var n=t.length-1;return function(e){var r=e<=0?e=0:e>=1?(e=1,n-1):Math.floor(e*n),i=t[r],o=t[r+1],u=r>0?t[r-1]:2*i-o,a=r<n-1?t[r+2]:2*o-i;return Jn((e-r/n)*n,u,i,o,a)}}),ie(function(t){var n=t.length;return function(e){var r=Math.floor(((e%=1)<0?++e:e)*n),i=t[(r+n-1)%n],o=t[r%n],u=t[(r+1)%n],a=t[(r+2)%n];return Jn((e-r/n)*n,i,o,u,a)}});var oe=function(t,n){return n-=t=+t,function(e){return t+n*e}},ue=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,ae=new RegExp(ue.source,"g");var ce,le,se,fe,he=function(t,n){var e,r,i,o=ue.lastIndex=ae.lastIndex=0,u=-1,a=[],c=[];for(t+="",n+="";(e=ue.exec(t))&&(r=ae.exec(n));)(i=r.index)>o&&(i=n.slice(o,i),a[u]?a[u]+=i:a[++u]=i),(e=e[0])===(r=r[0])?a[u]?a[u]+=r:a[++u]=r:(a[++u]=null,c.push({i:u,x:oe(e,r)})),o=ae.lastIndex;return o<n.length&&(i=n.slice(o),a[u]?a[u]+=i:a[++u]=i),a.length<2?c[0]?function(t){return function(n){return t(n)+""}}(c[0].x):function(t){return function(){return t}}(n):(n=c.length,function(t){for(var e,r=0;r<n;++r)a[(e=c[r]).i]=e.x(t);return a.join("")})},pe=function(t,n){var e,r=typeof n;return null==n||"boolean"===r?Qn(n):("number"===r?oe:"string"===r?(e=fn(n))?(n=e,re):he:n instanceof fn?re:n instanceof Date?function(t,n){var e=new Date;return n-=t=+t,function(r){return e.setTime(t+n*r),e}}:Array.isArray(n)?function(t,n){var e,r=n?n.length:0,i=t?Math.min(r,t.length):0,o=new Array(i),u=new Array(r);for(e=0;e<i;++e)o[e]=pe(t[e],n[e]);for(;e<r;++e)u[e]=n[e];return function(t){for(e=0;e<i;++e)u[e]=o[e](t);return u}}:"function"!=typeof n.valueOf&&"function"!=typeof n.toString||isNaN(n)?function(t,n){var e,r={},i={};for(e in null!==t&&"object"==typeof t||(t={}),null!==n&&"object"==typeof n||(n={}),n)e in t?r[e]=pe(t[e],n[e]):i[e]=n[e];return function(t){for(e in r)i[e]=r[e](t);return i}}:oe)(t,n)},de=function(t,n){return n-=t=+t,function(e){return Math.round(t+n*e)}},ge=180/Math.PI,ve={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},ye=function(t,n,e,r,i,o){var u,a,c;return(u=Math.sqrt(t*t+n*n))&&(t/=u,n/=u),(c=t*e+n*r)&&(e-=t*c,r-=n*c),(a=Math.sqrt(e*e+r*r))&&(e/=a,r/=a,c/=a),t*r<n*e&&(t=-t,n=-n,c=-c,u=-u),{translateX:i,translateY:o,rotate:Math.atan2(n,t)*ge,skewX:Math.atan(c)*ge,scaleX:u,scaleY:a}};function me(t,n,e,r){function i(t){return t.length?t.pop()+" ":""}return function(o,u){var a=[],c=[];return o=t(o),u=t(u),function(t,r,i,o,u,a){if(t!==i||r!==o){var c=u.push("translate(",null,n,null,e);a.push({i:c-4,x:oe(t,i)},{i:c-2,x:oe(r,o)})}else(i||o)&&u.push("translate("+i+n+o+e)}(o.translateX,o.translateY,u.translateX,u.translateY,a,c),function(t,n,e,o){t!==n?(t-n>180?n+=360:n-t>180&&(t+=360),o.push({i:e.push(i(e)+"rotate(",null,r)-2,x:oe(t,n)})):n&&e.push(i(e)+"rotate("+n+r)}(o.rotate,u.rotate,a,c),function(t,n,e,o){t!==n?o.push({i:e.push(i(e)+"skewX(",null,r)-2,x:oe(t,n)}):n&&e.push(i(e)+"skewX("+n+r)}(o.skewX,u.skewX,a,c),function(t,n,e,r,o,u){if(t!==e||n!==r){var a=o.push(i(o)+"scale(",null,",",null,")");u.push({i:a-4,x:oe(t,e)},{i:a-2,x:oe(n,r)})}else 1===e&&1===r||o.push(i(o)+"scale("+e+","+r+")")}(o.scaleX,o.scaleY,u.scaleX,u.scaleY,a,c),o=u=null,function(t){for(var n,e=-1,r=c.length;++e<r;)a[(n=c[e]).i]=n.x(t);return a.join("")}}}var we=me(function(t){return"none"===t?ve:(ce||(ce=document.createElement("DIV"),le=document.documentElement,se=document.defaultView),ce.style.transform=t,t=se.getComputedStyle(le.appendChild(ce),null).getPropertyValue("transform"),le.removeChild(ce),t=t.slice(7,-1).split(","),ye(+t[0],+t[1],+t[2],+t[3],+t[4],+t[5]))},"px, ","px)","deg)"),_e=me(function(t){return null==t?ve:(fe||(fe=document.createElementNS("http://www.w3.org/2000/svg","g")),fe.setAttribute("transform",t),(t=fe.transform.baseVal.consolidate())?(t=t.matrix,ye(t.a,t.b,t.c,t.d,t.e,t.f)):ve)},", ",")",")");Math.SQRT2;function Me(t){return function(n,e){var r=t((n=wn(n)).h,(e=wn(e)).h),i=ee(n.s,e.s),o=ee(n.l,e.l),u=ee(n.opacity,e.opacity);return function(t){return n.h=r(t),n.s=i(t),n.l=o(t),n.opacity=u(t),n+""}}}Me(te),Me(ee);function be(t){return function(n,e){var r=t((n=Yn(n)).h,(e=Yn(e)).h),i=ee(n.c,e.c),o=ee(n.l,e.l),u=ee(n.opacity,e.opacity);return function(t){return n.h=r(t),n.c=i(t),n.l=o(t),n.opacity=u(t),n+""}}}be(te),be(ee);function xe(t){return function n(e){function r(n,r){var i=t((n=Wn(n)).h,(r=Wn(r)).h),o=ee(n.s,r.s),u=ee(n.l,r.l),a=ee(n.opacity,r.opacity);return function(t){return n.h=i(t),n.s=o(t),n.l=u(Math.pow(t,e)),n.opacity=a(t),n+""}}return e=+e,r.gamma=n,r}(1)}xe(te),xe(ee);var Ae=function(t){return function(){return t}},Te=function(t){return+t},ke=[0,1];function Ce(t,n){return(n-=t=+t)?function(e){return(e-t)/n}:Ae(n)}function Ee(t,n,e,r){var i=t[0],o=t[1],u=n[0],a=n[1];return o<i?(i=e(o,i),u=r(a,u)):(i=e(i,o),u=r(u,a)),function(t){return u(i(t))}}function De(t,n,e,r){var i=Math.min(t.length,n.length)-1,o=new Array(i),u=new Array(i),c=-1;for(t[i]<t[0]&&(t=t.slice().reverse(),n=n.slice().reverse());++c<i;)o[c]=e(t[c],t[c+1]),u[c]=r(n[c],n[c+1]);return function(n){var e=a(t,n,1,i)-1;return u[e](o[e](n))}}function Se(t,n){return n.domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp())}function Ne(t,n){var e,r,i,o=ke,u=ke,a=pe,c=!1;function l(){return e=Math.min(o.length,u.length)>2?De:Ee,r=i=null,s}function s(n){return(r||(r=e(o,u,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=n?0:t>=e?1:r(t)}}}(t):t,a)))(+n)}return s.invert=function(t){return(i||(i=e(u,o,Ce,c?function(t){return function(n,e){var r=t(n=+n,e=+e);return function(t){return t<=0?n:t>=1?e:r(t)}}}(n):n)))(+t)},s.domain=function(t){return arguments.length?(o=Rt.call(t,Te),l()):o.slice()},s.range=function(t){return arguments.length?(u=Bt.call(t),l()):u.slice()},s.rangeRound=function(t){return u=Bt.call(t),a=de,l()},s.clamp=function(t){return arguments.length?(c=!!t,l()):c},s.interpolate=function(t){return arguments.length?(a=t,l()):a},l()}var Ue=function(t,n){var e,r=0,i=(t=t.slice()).length-1,o=t[r],u=t[i];return u<o&&(e=r,r=i,i=e,e=o,o=u,u=e),t[r]=n.floor(o),t[i]=n.ceil(u),t};function Oe(t,n){return(n=Math.log(n/t))?function(e){return Math.log(e/t)/n}:Ae(n)}function je(t,n){return t<0?function(e){return-Math.pow(-n,e)*Math.pow(-t,1-e)}:function(e){return Math.pow(n,e)*Math.pow(t,1-e)}}function He(t){return isFinite(t)?+("1e"+t):t<0?0:t}function Pe(t){return 10===t?He:t===Math.E?Math.exp:function(n){return Math.pow(t,n)}}function Fe(t){return t===Math.E?Math.log:10===t&&Math.log10||2===t&&Math.log2||(t=Math.log(t),function(n){return Math.log(n)/t})}function Ie(t){return function(n){return-t(-n)}}function Ye(){var t=Ne(Oe,je).domain([1,10]),n=t.domain,e=10,r=Fe(10),i=Pe(10);function o(){return r=Fe(e),i=Pe(e),n()[0]<0&&(r=Ie(r),i=Ie(i)),t}return t.base=function(t){return arguments.length?(e=+t,o()):e},t.domain=function(t){return arguments.length?(n(t),o()):n()},t.ticks=function(t){var o,u=n(),a=u[0],c=u[u.length-1];(o=c<a)&&(h=a,a=c,c=h);var l,s,f,h=r(a),d=r(c),g=null==t?10:+t,v=[];if(!(e%1)&&d-h<g){if(h=Math.round(h)-1,d=Math.round(d)+1,a>0){for(;h<d;++h)for(s=1,l=i(h);s<e;++s)if(!((f=l*s)<a)){if(f>c)break;v.push(f)}}else for(;h<d;++h)for(s=e-1,l=i(h);s>=1;--s)if(!((f=l*s)<a)){if(f>c)break;v.push(f)}}else v=p(h,d,Math.min(d-h,g)).map(i);return o?v.reverse():v},t.tickFormat=function(n,o){if(null==o&&(o=10===e?".0e":","),"function"!=typeof o&&(o=b(o)),n===1/0)return o;null==n&&(n=10);var u=Math.max(1,e*n/t.ticks().length);return function(t){var n=t/i(Math.round(r(t)));return n*e<e-.5&&(n*=e),n<=u?o(t):""}},t.nice=function(){return n(Ue(n(),{floor:function(t){return i(Math.floor(r(t)))},ceil:function(t){return i(Math.ceil(r(t)))}}))},t.copy=function(){return Se(t,Ye().base(e))},t}var qe=new Date,Le=new Date;function $e(t,n,e,r){function i(n){return t(n=new Date(+n)),n}return i.floor=i,i.ceil=function(e){return t(e=new Date(e-1)),n(e,1),t(e),e},i.round=function(t){var n=i(t),e=i.ceil(t);return t-n<e-t?n:e},i.offset=function(t,e){return n(t=new Date(+t),null==e?1:Math.floor(e)),t},i.range=function(e,r,o){var u,a=[];if(e=i.ceil(e),o=null==o?1:Math.floor(o),!(e<r&&o>0))return a;do{a.push(u=new Date(+e)),n(e,o),t(e)}while(u<e&&e<r);return a},i.filter=function(e){return $e(function(n){if(n>=n)for(;t(n),!e(n);)n.setTime(n-1)},function(t,r){if(t>=t)if(r<0)for(;++r<=0;)for(;n(t,-1),!e(t););else for(;--r>=0;)for(;n(t,1),!e(t););})},e&&(i.count=function(n,r){return qe.setTime(+n),Le.setTime(+r),t(qe),t(Le),Math.floor(e(qe,Le))},i.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?i.filter(r?function(n){return r(n)%t==0}:function(n){return i.count(0,n)%t==0}):i:null}),i}var Xe=$e(function(){},function(t,n){t.setTime(+t+n)},function(t,n){return n-t});Xe.every=function(t){return t=Math.floor(t),isFinite(t)&&t>0?t>1?$e(function(n){n.setTime(Math.floor(n/t)*t)},function(n,e){n.setTime(+n+e*t)},function(n,e){return(e-n)/t}):Xe:null};Xe.range;var ze=6e4,Re=6048e5,Be=$e(function(t){t.setTime(1e3*Math.floor(t/1e3))},function(t,n){t.setTime(+t+1e3*n)},function(t,n){return(n-t)/1e3},function(t){return t.getUTCSeconds()}),Ve=(Be.range,$e(function(t){t.setTime(Math.floor(t/ze)*ze)},function(t,n){t.setTime(+t+n*ze)},function(t,n){return(n-t)/ze},function(t){return t.getMinutes()})),Ze=(Ve.range,$e(function(t){var n=t.getTimezoneOffset()*ze%36e5;n<0&&(n+=36e5),t.setTime(36e5*Math.floor((+t-n)/36e5)+n)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getHours()})),We=(Ze.range,$e(function(t){t.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*ze)/864e5},function(t){return t.getDate()-1})),Ge=We;We.range;function Je(t){return $e(function(n){n.setDate(n.getDate()-(n.getDay()+7-t)%7),n.setHours(0,0,0,0)},function(t,n){t.setDate(t.getDate()+7*n)},function(t,n){return(n-t-(n.getTimezoneOffset()-t.getTimezoneOffset())*ze)/Re})}var Qe=Je(0),Ke=Je(1),tr=Je(2),nr=Je(3),er=Je(4),rr=Je(5),ir=Je(6),or=(Qe.range,Ke.range,tr.range,nr.range,er.range,rr.range,ir.range,$e(function(t){t.setDate(1),t.setHours(0,0,0,0)},function(t,n){t.setMonth(t.getMonth()+n)},function(t,n){return n.getMonth()-t.getMonth()+12*(n.getFullYear()-t.getFullYear())},function(t){return t.getMonth()})),ur=(or.range,$e(function(t){t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n)},function(t,n){return n.getFullYear()-t.getFullYear()},function(t){return t.getFullYear()}));ur.every=function(t){return isFinite(t=Math.floor(t))&&t>0?$e(function(n){n.setFullYear(Math.floor(n.getFullYear()/t)*t),n.setMonth(0,1),n.setHours(0,0,0,0)},function(n,e){n.setFullYear(n.getFullYear()+e*t)}):null};var ar=ur,cr=(ur.range,$e(function(t){t.setUTCSeconds(0,0)},function(t,n){t.setTime(+t+n*ze)},function(t,n){return(n-t)/ze},function(t){return t.getUTCMinutes()})),lr=(cr.range,$e(function(t){t.setUTCMinutes(0,0,0)},function(t,n){t.setTime(+t+36e5*n)},function(t,n){return(n-t)/36e5},function(t){return t.getUTCHours()})),sr=(lr.range,$e(function(t){t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+n)},function(t,n){return(n-t)/864e5},function(t){return t.getUTCDate()-1})),fr=sr;sr.range;function hr(t){return $e(function(n){n.setUTCDate(n.getUTCDate()-(n.getUTCDay()+7-t)%7),n.setUTCHours(0,0,0,0)},function(t,n){t.setUTCDate(t.getUTCDate()+7*n)},function(t,n){return(n-t)/Re})}var pr=hr(0),dr=hr(1),gr=hr(2),vr=hr(3),yr=hr(4),mr=hr(5),wr=hr(6),_r=(pr.range,dr.range,gr.range,vr.range,yr.range,mr.range,wr.range,$e(function(t){t.setUTCDate(1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCMonth(t.getUTCMonth()+n)},function(t,n){return n.getUTCMonth()-t.getUTCMonth()+12*(n.getUTCFullYear()-t.getUTCFullYear())},function(t){return t.getUTCMonth()})),Mr=(_r.range,$e(function(t){t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n)},function(t,n){return n.getUTCFullYear()-t.getUTCFullYear()},function(t){return t.getUTCFullYear()}));Mr.every=function(t){return isFinite(t=Math.floor(t))&&t>0?$e(function(n){n.setUTCFullYear(Math.floor(n.getUTCFullYear()/t)*t),n.setUTCMonth(0,1),n.setUTCHours(0,0,0,0)},function(n,e){n.setUTCFullYear(n.getUTCFullYear()+e*t)}):null};var br=Mr;Mr.range;function xr(t){if(0<=t.y&&t.y<100){var n=new Date(-1,t.m,t.d,t.H,t.M,t.S,t.L);return n.setFullYear(t.y),n}return new Date(t.y,t.m,t.d,t.H,t.M,t.S,t.L)}function Ar(t){if(0<=t.y&&t.y<100){var n=new Date(Date.UTC(-1,t.m,t.d,t.H,t.M,t.S,t.L));return n.setUTCFullYear(t.y),n}return new Date(Date.UTC(t.y,t.m,t.d,t.H,t.M,t.S,t.L))}function Tr(t){return{y:t,m:0,d:1,H:0,M:0,S:0,L:0}}var kr,Cr,Er,Dr={"-":"",_:" ",0:"0"},Sr=/^\s*\d+/,Nr=/^%/,Ur=/[\\^$*+?|[\]().{}]/g;function Or(t,n,e){var r=t<0?"-":"",i=(r?-t:t)+"",o=i.length;return r+(o<e?new Array(e-o+1).join(n)+i:i)}function jr(t){return t.replace(Ur,"\\$&")}function Hr(t){return new RegExp("^(?:"+t.map(jr).join("|")+")","i")}function Pr(t){for(var n={},e=-1,r=t.length;++e<r;)n[t[e].toLowerCase()]=e;return n}function Fr(t,n,e){var r=Sr.exec(n.slice(e,e+1));return r?(t.w=+r[0],e+r[0].length):-1}function Ir(t,n,e){var r=Sr.exec(n.slice(e,e+1));return r?(t.u=+r[0],e+r[0].length):-1}function Yr(t,n,e){var r=Sr.exec(n.slice(e,e+2));return r?(t.U=+r[0],e+r[0].length):-1}function qr(t,n,e){var r=Sr.exec(n.slice(e,e+2));return r?(t.V=+r[0],e+r[0].length):-1}function Lr(t,n,e){var r=Sr.exec(n.slice(e,e+2));return r?(t.W=+r[0],e+r[0].length):-1}function $r(t,n,e){var r=Sr.exec(n.slice(e,e+4));return r?(t.y=+r[0],e+r[0].length):-1}function Xr(t,n,e){var r=Sr.exec(n.slice(e,e+2));return r?(t.y=+r[0]+(+r[0]>68?1900:2e3),e+r[0].length):-1}function zr(t,n,e){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(n.slice(e,e+6));return r?(t.Z=r[1]?0:-(r[2]+(r[3]||"00")),e+r[0].length):-1}function Rr(t,n,e){var r=Sr.exec(n.slice(e,e+2));return r?(t.m=r[0]-1,e+r[0].length):-1}function Br(t,n,e){var r=Sr.exec(n.slice(e,e+2));return r?(t.d=+r[0],e+r[0].length):-1}function Vr(t,n,e){var r=Sr.exec(n.slice(e,e+3));return r?(t.m=0,t.d=+r[0],e+r[0].length):-1}function Zr(t,n,e){var r=Sr.exec(n.slice(e,e+2));return r?(t.H=+r[0],e+r[0].length):-1}function Wr(t,n,e){var r=Sr.exec(n.slice(e,e+2));return r?(t.M=+r[0],e+r[0].length):-1}function Gr(t,n,e){var r=Sr.exec(n.slice(e,e+2));return r?(t.S=+r[0],e+r[0].length):-1}function Jr(t,n,e){var r=Sr.exec(n.slice(e,e+3));return r?(t.L=+r[0],e+r[0].length):-1}function Qr(t,n,e){var r=Sr.exec(n.slice(e,e+6));return r?(t.L=Math.floor(r[0]/1e3),e+r[0].length):-1}function Kr(t,n,e){var r=Nr.exec(n.slice(e,e+1));return r?e+r[0].length:-1}function ti(t,n,e){var r=Sr.exec(n.slice(e));return r?(t.Q=+r[0],e+r[0].length):-1}function ni(t,n,e){var r=Sr.exec(n.slice(e));return r?(t.Q=1e3*+r[0],e+r[0].length):-1}function ei(t,n){return Or(t.getDate(),n,2)}function ri(t,n){return Or(t.getHours(),n,2)}function ii(t,n){return Or(t.getHours()%12||12,n,2)}function oi(t,n){return Or(1+Ge.count(ar(t),t),n,3)}function ui(t,n){return Or(t.getMilliseconds(),n,3)}function ai(t,n){return ui(t,n)+"000"}function ci(t,n){return Or(t.getMonth()+1,n,2)}function li(t,n){return Or(t.getMinutes(),n,2)}function si(t,n){return Or(t.getSeconds(),n,2)}function fi(t){var n=t.getDay();return 0===n?7:n}function hi(t,n){return Or(Qe.count(ar(t),t),n,2)}function pi(t,n){var e=t.getDay();return t=e>=4||0===e?er(t):er.ceil(t),Or(er.count(ar(t),t)+(4===ar(t).getDay()),n,2)}function di(t){return t.getDay()}function gi(t,n){return Or(Ke.count(ar(t),t),n,2)}function vi(t,n){return Or(t.getFullYear()%100,n,2)}function yi(t,n){return Or(t.getFullYear()%1e4,n,4)}function mi(t){var n=t.getTimezoneOffset();return(n>0?"-":(n*=-1,"+"))+Or(n/60|0,"0",2)+Or(n%60,"0",2)}function wi(t,n){return Or(t.getUTCDate(),n,2)}function _i(t,n){return Or(t.getUTCHours(),n,2)}function Mi(t,n){return Or(t.getUTCHours()%12||12,n,2)}function bi(t,n){return Or(1+fr.count(br(t),t),n,3)}function xi(t,n){return Or(t.getUTCMilliseconds(),n,3)}function Ai(t,n){return xi(t,n)+"000"}function Ti(t,n){return Or(t.getUTCMonth()+1,n,2)}function ki(t,n){return Or(t.getUTCMinutes(),n,2)}function Ci(t,n){return Or(t.getUTCSeconds(),n,2)}function Ei(t){var n=t.getUTCDay();return 0===n?7:n}function Di(t,n){return Or(pr.count(br(t),t),n,2)}function Si(t,n){var e=t.getUTCDay();return t=e>=4||0===e?yr(t):yr.ceil(t),Or(yr.count(br(t),t)+(4===br(t).getUTCDay()),n,2)}function Ni(t){return t.getUTCDay()}function Ui(t,n){return Or(dr.count(br(t),t),n,2)}function Oi(t,n){return Or(t.getUTCFullYear()%100,n,2)}function ji(t,n){return Or(t.getUTCFullYear()%1e4,n,4)}function Hi(){return"+0000"}function Pi(){return"%"}function Fi(t){return+t}function Ii(t){return Math.floor(+t/1e3)}!function(t){kr=function(t){var n=t.dateTime,e=t.date,r=t.time,i=t.periods,o=t.days,u=t.shortDays,a=t.months,c=t.shortMonths,l=Hr(i),s=Pr(i),f=Hr(o),h=Pr(o),p=Hr(u),d=Pr(u),g=Hr(a),v=Pr(a),y=Hr(c),m=Pr(c),w={a:function(t){return u[t.getDay()]},A:function(t){return o[t.getDay()]},b:function(t){return c[t.getMonth()]},B:function(t){return a[t.getMonth()]},c:null,d:ei,e:ei,f:ai,H:ri,I:ii,j:oi,L:ui,m:ci,M:li,p:function(t){return i[+(t.getHours()>=12)]},Q:Fi,s:Ii,S:si,u:fi,U:hi,V:pi,w:di,W:gi,x:null,X:null,y:vi,Y:yi,Z:mi,"%":Pi},_={a:function(t){return u[t.getUTCDay()]},A:function(t){return o[t.getUTCDay()]},b:function(t){return c[t.getUTCMonth()]},B:function(t){return a[t.getUTCMonth()]},c:null,d:wi,e:wi,f:Ai,H:_i,I:Mi,j:bi,L:xi,m:Ti,M:ki,p:function(t){return i[+(t.getUTCHours()>=12)]},Q:Fi,s:Ii,S:Ci,u:Ei,U:Di,V:Si,w:Ni,W:Ui,x:null,X:null,y:Oi,Y:ji,Z:Hi,"%":Pi},M={a:function(t,n,e){var r=p.exec(n.slice(e));return r?(t.w=d[r[0].toLowerCase()],e+r[0].length):-1},A:function(t,n,e){var r=f.exec(n.slice(e));return r?(t.w=h[r[0].toLowerCase()],e+r[0].length):-1},b:function(t,n,e){var r=y.exec(n.slice(e));return r?(t.m=m[r[0].toLowerCase()],e+r[0].length):-1},B:function(t,n,e){var r=g.exec(n.slice(e));return r?(t.m=v[r[0].toLowerCase()],e+r[0].length):-1},c:function(t,e,r){return A(t,n,e,r)},d:Br,e:Br,f:Qr,H:Zr,I:Zr,j:Vr,L:Jr,m:Rr,M:Wr,p:function(t,n,e){var r=l.exec(n.slice(e));return r?(t.p=s[r[0].toLowerCase()],e+r[0].length):-1},Q:ti,s:ni,S:Gr,u:Ir,U:Yr,V:qr,w:Fr,W:Lr,x:function(t,n,r){return A(t,e,n,r)},X:function(t,n,e){return A(t,r,n,e)},y:Xr,Y:$r,Z:zr,"%":Kr};function b(t,n){return function(e){var r,i,o,u=[],a=-1,c=0,l=t.length;for(e instanceof Date||(e=new Date(+e));++a<l;)37===t.charCodeAt(a)&&(u.push(t.slice(c,a)),null!=(i=Dr[r=t.charAt(++a)])?r=t.charAt(++a):i="e"===r?" ":"0",(o=n[r])&&(r=o(e,i)),u.push(r),c=a+1);return u.push(t.slice(c,a)),u.join("")}}function x(t,n){return function(e){var r,i,o=Tr(1900);if(A(o,t,e+="",0)!=e.length)return null;if("Q"in o)return new Date(o.Q);if("p"in o&&(o.H=o.H%12+12*o.p),"V"in o){if(o.V<1||o.V>53)return null;"w"in o||(o.w=1),"Z"in o?(r=(i=(r=Ar(Tr(o.y))).getUTCDay())>4||0===i?dr.ceil(r):dr(r),r=fr.offset(r,7*(o.V-1)),o.y=r.getUTCFullYear(),o.m=r.getUTCMonth(),o.d=r.getUTCDate()+(o.w+6)%7):(r=(i=(r=n(Tr(o.y))).getDay())>4||0===i?Ke.ceil(r):Ke(r),r=Ge.offset(r,7*(o.V-1)),o.y=r.getFullYear(),o.m=r.getMonth(),o.d=r.getDate()+(o.w+6)%7)}else("W"in o||"U"in o)&&("w"in o||(o.w="u"in o?o.u%7:"W"in o?1:0),i="Z"in o?Ar(Tr(o.y)).getUTCDay():n(Tr(o.y)).getDay(),o.m=0,o.d="W"in o?(o.w+6)%7+7*o.W-(i+5)%7:o.w+7*o.U-(i+6)%7);return"Z"in o?(o.H+=o.Z/100|0,o.M+=o.Z%100,Ar(o)):n(o)}}function A(t,n,e,r){for(var i,o,u=0,a=n.length,c=e.length;u<a;){if(r>=c)return-1;if(37===(i=n.charCodeAt(u++))){if(i=n.charAt(u++),!(o=M[i in Dr?n.charAt(u++):i])||(r=o(t,e,r))<0)return-1}else if(i!=e.charCodeAt(r++))return-1}return r}return w.x=b(e,w),w.X=b(r,w),w.c=b(n,w),_.x=b(e,_),_.X=b(r,_),_.c=b(n,_),{format:function(t){var n=b(t+="",w);return n.toString=function(){return t},n},parse:function(t){var n=x(t+="",xr);return n.toString=function(){return t},n},utcFormat:function(t){var n=b(t+="",_);return n.toString=function(){return t},n},utcParse:function(t){var n=x(t,Ar);return n.toString=function(){return t},n}}}(t),kr.format,kr.parse,Cr=kr.utcFormat,Er=kr.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});Date.prototype.toISOString||Cr("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||Er("%Y-%m-%dT%H:%M:%S.%LZ");var Yi={value:function(){}};function qi(){for(var t,n=0,e=arguments.length,r={};n<e;++n){if(!(t=arguments[n]+"")||t in r)throw new Error("illegal type: "+t);r[t]=[]}return new Li(r)}function Li(t){this._=t}function $i(t,n){for(var e,r=0,i=t.length;r<i;++r)if((e=t[r]).name===n)return e.value}function Xi(t,n,e){for(var r=0,i=t.length;r<i;++r)if(t[r].name===n){t[r]=Yi,t=t.slice(0,r).concat(t.slice(r+1));break}return null!=e&&t.push({name:n,value:e}),t}Li.prototype=qi.prototype={constructor:Li,on:function(t,n){var e,r=this._,i=function(t,n){return t.trim().split(/^|\s+/).map(function(t){var e="",r=t.indexOf(".");if(r>=0&&(e=t.slice(r+1),t=t.slice(0,r)),t&&!n.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:e}})}(t+"",r),o=-1,u=i.length;if(!(arguments.length<2)){if(null!=n&&"function"!=typeof n)throw new Error("invalid callback: "+n);for(;++o<u;)if(e=(t=i[o]).type)r[e]=Xi(r[e],t.name,n);else if(null==n)for(e in r)r[e]=Xi(r[e],t.name,null);return this}for(;++o<u;)if((e=(t=i[o]).type)&&(e=$i(r[e],t.name)))return e},copy:function(){var t={},n=this._;for(var e in n)t[e]=n[e].slice();return new Li(t)},call:function(t,n){if((e=arguments.length-2)>0)for(var e,r,i=new Array(e),o=0;o<e;++o)i[o]=arguments[o+2];if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(o=0,e=(r=this._[t]).length;o<e;++o)r[o].value.apply(n,i)},apply:function(t,n,e){if(!this._.hasOwnProperty(t))throw new Error("unknown type: "+t);for(var r=this._[t],i=0,o=r.length;i<o;++i)r[i].value.apply(n,e)}};var zi,Ri,Bi=qi,Vi=0,Zi=0,Wi=0,Gi=1e3,Ji=0,Qi=0,Ki=0,to="object"==typeof performance&&performance.now?performance:Date,no="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(t){setTimeout(t,17)};function eo(){return Qi||(no(ro),Qi=to.now()+Ki)}function ro(){Qi=0}function io(){this._call=this._time=this._next=null}function oo(t,n,e){var r=new io;return r.restart(t,n,e),r}function uo(){Qi=(Ji=to.now())+Ki,Vi=Zi=0;try{!function(){eo(),++Vi;for(var t,n=zi;n;)(t=Qi-n._time)>=0&&n._call.call(null,t),n=n._next;--Vi}()}finally{Vi=0,function(){var t,n,e=zi,r=1/0;for(;e;)e._call?(r>e._time&&(r=e._time),t=e,e=e._next):(n=e._next,e._next=null,e=t?t._next=n:zi=n);Ri=t,co(r)}(),Qi=0}}function ao(){var t=to.now(),n=t-Ji;n>Gi&&(Ki-=n,Ji=t)}function co(t){Vi||(Zi&&(Zi=clearTimeout(Zi)),t-Qi>24?(t<1/0&&(Zi=setTimeout(uo,t-to.now()-Ki)),Wi&&(Wi=clearInterval(Wi))):(Wi||(Ji=to.now(),Wi=setInterval(ao,Gi)),Vi=1,no(uo)))}io.prototype=oo.prototype={constructor:io,restart:function(t,n,e){if("function"!=typeof t)throw new TypeError("callback is not a function");e=(null==e?eo():+e)+(null==n?0:+n),this._next||Ri===this||(Ri?Ri._next=this:zi=this,Ri=this),this._call=t,this._time=e,co()},stop:function(){this._call&&(this._call=null,this._time=1/0,co())}};var lo=function(t,n,e){var r=new io;return n=null==n?0:+n,r.restart(function(e){r.stop(),t(e+n)},n,e),r},so=Bi("start","end","interrupt"),fo=[],ho=0,po=1,go=2,vo=3,yo=4,mo=5,wo=6,_o=function(t,n,e,r,i,o){var u=t.__transition;if(u){if(e in u)return}else t.__transition={};!function(t,n,e){var r,i=t.__transition;function o(c){var l,s,f,h;if(e.state!==po)return a();for(l in i)if((h=i[l]).name===e.name){if(h.state===vo)return lo(o);h.state===yo?(h.state=wo,h.timer.stop(),h.on.call("interrupt",t,t.__data__,h.index,h.group),delete i[l]):+l<n&&(h.state=wo,h.timer.stop(),delete i[l])}if(lo(function(){e.state===vo&&(e.state=yo,e.timer.restart(u,e.delay,e.time),u(c))}),e.state=go,e.on.call("start",t,t.__data__,e.index,e.group),e.state===go){for(e.state=vo,r=new Array(f=e.tween.length),l=0,s=-1;l<f;++l)(h=e.tween[l].value.call(t,t.__data__,e.index,e.group))&&(r[++s]=h);r.length=s+1}}function u(n){for(var i=n<e.duration?e.ease.call(null,n/e.duration):(e.timer.restart(a),e.state=mo,1),o=-1,u=r.length;++o<u;)r[o].call(null,i);e.state===mo&&(e.on.call("end",t,t.__data__,e.index,e.group),a())}function a(){for(var r in e.state=wo,e.timer.stop(),delete i[n],i)return;delete t.__transition}i[n]=e,e.timer=oo(function(t){e.state=po,e.timer.restart(o,e.delay,e.time),e.delay<=t&&o(t-e.delay)},0,e.time)}(t,e,{name:n,index:r,group:i,on:so,tween:fo,time:o.time,delay:o.delay,duration:o.duration,ease:o.ease,timer:null,state:ho})};function Mo(t,n){var e=xo(t,n);if(e.state>ho)throw new Error("too late; already scheduled");return e}function bo(t,n){var e=xo(t,n);if(e.state>go)throw new Error("too late; already started");return e}function xo(t,n){var e=t.__transition;if(!e||!(e=e[n]))throw new Error("transition not found");return e}function Ao(t,n,e){var r=t._id;return t.each(function(){var t=bo(this,r);(t.value||(t.value={}))[n]=e.apply(this,arguments)}),function(t){return xo(t,r).value[n]}}var To=function(t,n){var e;return("number"==typeof n?oe:n instanceof fn?re:(e=fn(n))?(n=e,re):he)(t,n)};var ko=Ot.prototype.constructor;var Co=0;function Eo(t,n,e,r){this._groups=t,this._parents=n,this._name=e,this._id=r}function Do(){return++Co}var So=Ot.prototype;Eo.prototype=function(t){return Ot().transition(t)}.prototype={constructor:Eo,select:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=W(t));for(var r=this._groups,i=r.length,o=new Array(i),u=0;u<i;++u)for(var a,c,l=r[u],s=l.length,f=o[u]=new Array(s),h=0;h<s;++h)(a=l[h])&&(c=t.call(a,a.__data__,h,l))&&("__data__"in a&&(c.__data__=a.__data__),f[h]=c,_o(f[h],n,e,h,f,xo(a,e)));return new Eo(o,this._parents,n,e)},selectAll:function(t){var n=this._name,e=this._id;"function"!=typeof t&&(t=J(t));for(var r=this._groups,i=r.length,o=[],u=[],a=0;a<i;++a)for(var c,l=r[a],s=l.length,f=0;f<s;++f)if(c=l[f]){for(var h,p=t.call(c,c.__data__,f,l),d=xo(c,e),g=0,v=p.length;g<v;++g)(h=p[g])&&_o(h,n,e,g,p,d);o.push(p),u.push(c)}return new Eo(o,u,n,e)},filter:function(t){"function"!=typeof t&&(t=nt(t));for(var n=this._groups,e=n.length,r=new Array(e),i=0;i<e;++i)for(var o,u=n[i],a=u.length,c=r[i]=[],l=0;l<a;++l)(o=u[l])&&t.call(o,o.__data__,l,u)&&c.push(o);return new Eo(r,this._parents,this._name,this._id)},merge:function(t){if(t._id!==this._id)throw new Error;for(var n=this._groups,e=t._groups,r=n.length,i=e.length,o=Math.min(r,i),u=new Array(r),a=0;a<o;++a)for(var c,l=n[a],s=e[a],f=l.length,h=u[a]=new Array(f),p=0;p<f;++p)(c=l[p]||s[p])&&(h[p]=c);for(;a<r;++a)u[a]=n[a];return new Eo(u,this._parents,this._name,this._id)},selection:function(){return new ko(this._groups,this._parents)},transition:function(){for(var t=this._name,n=this._id,e=Do(),r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,l=0;l<c;++l)if(u=a[l]){var s=xo(u,n);_o(u,t,e,l,a,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new Eo(r,this._parents,t,e)},call:So.call,nodes:So.nodes,node:So.node,size:So.size,empty:So.empty,each:So.each,on:function(t,n){var e=this._id;return arguments.length<2?xo(this.node(),e).on.on(t):this.each(function(t,n,e){var r,i,o=function(t){return(t+"").trim().split(/^|\s+/).every(function(t){var n=t.indexOf(".");return n>=0&&(t=t.slice(0,n)),!t||"start"===t})}(n)?Mo:bo;return function(){var u=o(this,t),a=u.on;a!==r&&(i=(r=a).copy()).on(n,e),u.on=i}}(e,t,n))},attr:function(t,n){var e=B(t),r="transform"===e?_e:To;return this.attrTween(t,"function"==typeof n?(e.local?function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttributeNS(t.space,t.local))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttributeNS(t.space,t.local)}}:function(t,n,e){var r,i,o;return function(){var u,a=e(this);if(null!=a)return(u=this.getAttribute(t))===a?null:u===r&&a===i?o:o=n(r=u,i=a);this.removeAttribute(t)}})(e,r,Ao(this,"attr."+t,n)):null==n?(e.local?function(t){return function(){this.removeAttributeNS(t.space,t.local)}}:function(t){return function(){this.removeAttribute(t)}})(e):(e.local?function(t,n,e){var r,i;return function(){var o=this.getAttributeNS(t.space,t.local);return o===e?null:o===r?i:i=n(r=o,e)}}:function(t,n,e){var r,i;return function(){var o=this.getAttribute(t);return o===e?null:o===r?i:i=n(r=o,e)}})(e,r,n+""))},attrTween:function(t,n){var e="attr."+t;if(arguments.length<2)return(e=this.tween(e))&&e._value;if(null==n)return this.tween(e,null);if("function"!=typeof n)throw new Error;var r=B(t);return this.tween(e,(r.local?function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttributeNS(t.space,t.local,r(n))}}return e._value=n,e}:function(t,n){function e(){var e=this,r=n.apply(e,arguments);return r&&function(n){e.setAttribute(t,r(n))}}return e._value=n,e})(r,n))},style:function(t,n,e){var r="transform"==(t+="")?we:To;return null==n?this.styleTween(t,function(t,n){var e,r,i;return function(){var o=lt(this,t),u=(this.style.removeProperty(t),lt(this,t));return o===u?null:o===e&&u===r?i:i=n(e=o,r=u)}}(t,r)).on("end.style."+t,function(t){return function(){this.style.removeProperty(t)}}(t)):this.styleTween(t,"function"==typeof n?function(t,n,e){var r,i,o;return function(){var u=lt(this,t),a=e(this);return null==a&&(this.style.removeProperty(t),a=lt(this,t)),u===a?null:u===r&&a===i?o:o=n(r=u,i=a)}}(t,r,Ao(this,"style."+t,n)):function(t,n,e){var r,i;return function(){var o=lt(this,t);return o===e?null:o===r?i:i=n(r=o,e)}}(t,r,n+""),e)},styleTween:function(t,n,e){var r="style."+(t+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==n)return this.tween(r,null);if("function"!=typeof n)throw new Error;return this.tween(r,function(t,n,e){function r(){var r=this,i=n.apply(r,arguments);return i&&function(n){r.style.setProperty(t,i(n),e)}}return r._value=n,r}(t,n,null==e?"":e))},text:function(t){return this.tween("text","function"==typeof t?function(t){return function(){var n=t(this);this.textContent=null==n?"":n}}(Ao(this,"text",t)):function(t){return function(){this.textContent=t}}(null==t?"":t+""))},remove:function(){return this.on("end.remove",function(t){return function(){var n=this.parentNode;for(var e in this.__transition)if(+e!==t)return;n&&n.removeChild(this)}}(this._id))},tween:function(t,n){var e=this._id;if(t+="",arguments.length<2){for(var r,i=xo(this.node(),e).tween,o=0,u=i.length;o<u;++o)if((r=i[o]).name===t)return r.value;return null}return this.each((null==n?function(t,n){var e,r;return function(){var i=bo(this,t),o=i.tween;if(o!==e)for(var u=0,a=(r=e=o).length;u<a;++u)if(r[u].name===n){(r=r.slice()).splice(u,1);break}i.tween=r}}:function(t,n,e){var r,i;if("function"!=typeof e)throw new Error;return function(){var o=bo(this,t),u=o.tween;if(u!==r){i=(r=u).slice();for(var a={name:n,value:e},c=0,l=i.length;c<l;++c)if(i[c].name===n){i[c]=a;break}c===l&&i.push(a)}o.tween=i}})(e,t,n))},delay:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){Mo(this,t).delay=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){Mo(this,t).delay=n}})(n,t)):xo(this.node(),n).delay},duration:function(t){var n=this._id;return arguments.length?this.each(("function"==typeof t?function(t,n){return function(){bo(this,t).duration=+n.apply(this,arguments)}}:function(t,n){return n=+n,function(){bo(this,t).duration=n}})(n,t)):xo(this.node(),n).duration},ease:function(t){var n=this._id;return arguments.length?this.each(function(t,n){if("function"!=typeof n)throw new Error;return function(){bo(this,t).ease=n}}(n,t)):xo(this.node(),n).ease}};(function t(n){function e(t){return Math.pow(t,n)}return n=+n,e.exponent=t,e})(3),function t(n){function e(t){return 1-Math.pow(1-t,n)}return n=+n,e.exponent=t,e}(3),function t(n){function e(t){return((t*=2)<=1?Math.pow(t,n):2-Math.pow(2-t,n))/2}return n=+n,e.exponent=t,e}(3),Math.PI;(function t(n){function e(t){return t*t*((n+1)*t-n)}return n=+n,e.overshoot=t,e})(1.70158),function t(n){function e(t){return--t*t*((n+1)*t+n)+1}return n=+n,e.overshoot=t,e}(1.70158),function t(n){function e(t){return((t*=2)<1?t*t*((n+1)*t-n):(t-=2)*t*((n+1)*t+n)+2)/2}return n=+n,e.overshoot=t,e}(1.70158);var No=2*Math.PI,Uo=(function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=No);function i(t){return n*Math.pow(2,10*--t)*Math.sin((r-t)/e)}return i.amplitude=function(n){return t(n,e*No)},i.period=function(e){return t(n,e)},i}(1,.3),function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=No);function i(t){return 1-n*Math.pow(2,-10*(t=+t))*Math.sin((t+r)/e)}return i.amplitude=function(n){return t(n,e*No)},i.period=function(e){return t(n,e)},i}(1,.3),function t(n,e){var r=Math.asin(1/(n=Math.max(1,n)))*(e/=No);function i(t){return((t=2*t-1)<0?n*Math.pow(2,10*t)*Math.sin((r-t)/e):2-n*Math.pow(2,-10*t)*Math.sin((r+t)/e))/2}return i.amplitude=function(n){return t(n,e*No)},i.period=function(e){return t(n,e)},i}(1,.3),{time:null,delay:0,duration:250,ease:function(t){return((t*=2)<=1?t*t*t:(t-=2)*t*t+2)/2}});function Oo(t,n){for(var e;!(e=t.__transition)||!(e=e[n]);)if(!(t=t.parentNode))return Uo.time=eo(),Uo;return e}Ot.prototype.interrupt=function(t){return this.each(function(){!function(t,n){var e,r,i,o=t.__transition,u=!0;if(o){for(i in n=null==n?null:n+"",o)(e=o[i]).name===n?(r=e.state>go&&e.state<mo,e.state=wo,e.timer.stop(),r&&e.on.call("interrupt",t,t.__data__,e.index,e.group),delete o[i]):u=!1;u&&delete t.__transition}}(this,t)})},Ot.prototype.transition=function(t){var n,e;t instanceof Eo?(n=t._id,t=t._name):(n=Do(),(e=Uo).time=eo(),t=null==t?null:t+"");for(var r=this._groups,i=r.length,o=0;o<i;++o)for(var u,a=r[o],c=a.length,l=0;l<c;++l)(u=a[l])&&_o(u,t,n,l,a,e||Oo(u,n));return new Eo(r,this._parents,t,n)};var jo=jt(".tooltip"),Ho={show:function(t){var n=At.pageY,e=At.pageX;e+10>document.body.clientWidth-215&&(e=document.body.clientWidth+5-215),jo.transition().duration(200).style("opacity",.9).on("end",function(){jo.classed("isActive",!0),jo.on("click",this.hide)}),jo.html(t).style("visibility","visible").style("left",e+"px").style("top",n+"px")},hide:function(){jo.transition().duration(500).style("opacity",0)},formatContent:function(t){var n='<ul class="tooltip-list">';return t.forEach(function(t,e){var r=null;t.class&&(r=t.class);var i=Object.keys(t)[0];n+='<li class="'.concat(r,'"><span class="tooltip-label">').concat(i,":</span> ").concat(t[i],"</li>")}),n+="</ul>"}};function Po(t){return function(t){if(Array.isArray(t)){for(var n=0,e=new Array(t.length);n<t.length;n++)e[n]=t[n];return e}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var Fo,Io,Yo,qo,Lo,$o,Xo,zo,Ro=b(".3s"),Bo=b(".2f"),Vo=["canada","china","eu","mexico"],Zo=["#9EB040","#FE5000","#0AA4CF","#F2AF19","#fff"],Wo={top:10,right:5,bottom:10,left:5},Go=jt(".chart"),Jo=8,Qo=11,Ko=12,tu=48,nu=Vo,eu=[];function ru(t){function n(){Io=n.width(),Yo=.8*n.width(),qo=function(t,n,e,r){var i,o=t-2,u=n-2,a=Math.floor(o/e),c=Math.floor(u/r);i=a<=c?a:c;return i}(Io-Qo*Ko-Wo.right-Wo.left,Yo-Qo*Ko-Wo.top-Wo.bottom,Qo,Jo);!function(t,n,e){for(var r=[],i=1,o=1,u=e,a=0;a<n;a++){r.push([]);for(var c=0;c<t;c++)r[a].push({x:i,y:o,width:u,height:u}),i+=u;i=1,o+=u}}(Qo,Jo,qo);var r=document.querySelectorAll(".map").length?Go.selectAll(".map"):jt(".chart").append("svg");r.attr("width",Io+Wo.left+Wo.right).attr("height",Yo+Wo.top+Wo.bottom).attr("class","map").attr("viewBox","0 0 "+(Io+Wo.left+Wo.right)+" "+(Yo+Wo.top+Wo.bottom)),Ft("input").on("click",e.key.click);var i=document.querySelectorAll(".gridmap").length?Go.selectAll(".gridmap"):r.append("g").attr("class","gridmap"),o=document.querySelectorAll(".group").length?i.selectAll(".group"):i.selectAll(".group").data(t).enter().append("g").attr("class",function(t){return"group "+t.code});o.data(t).attr("x",function(t){return(t.col-1)*qo+Ko*t.col}).attr("y",function(t){return(t.row-1)*qo+Ko*t.row}),'"xsmall"'!==getComputedStyle(document.body).getPropertyValue("--breakpoint")&&i.selectAll(".group").on("mouseover",e.states.mouseover).on("mouseleave",e.states.mouseleave),o.each(function(t,n,e){(document.querySelector(".state.".concat(t.code))?jt(e[n]).selectAll(".state.".concat(t.code)):jt(e[n]).selectAll(".state").data([t]).enter().append("rect").attr("class",function(t){return"state "+t.code})).attr("fill","#fff").attr("stroke",function(t){return $o(t.totaldollars)}).attr("stroke-width",function(t){return Xo(t.totaldollars)}).attr("x",function(t){return(t.col-1)*qo+Ko*t.col}).attr("y",function(t){return(t.row-1)*qo+Ko*t.row}).attr("width",qo+2).attr("height",qo+2)})}$o=Ye().domain(c(t,function(t){return+t.totaldollars})).range(["#E5E5E5","#5E5E5E"]),Xo=Ye().domain(c(t,function(t){return+t.totaldollars})).range(["1","5"]),zo=Zt().domain(Vo.concat(["other"])).range(Zo),n.width=function(){if(!arguments.length)return Io;Io=(arguments.length<=0?void 0:arguments[0])-Wo.left-Wo.right},n.height=function(){if(!arguments.length)return Yo;Yo=(arguments.length<=0?void 0:arguments[0])-Wo.top-Wo.bottom};var e={key:{click:function(t){jt(".stateModal").remove();var n=["legend-label","active","other","all"],e=this.classList,r=e.contains("all"),i=this.checked,o=(jt("input.all").node().checked,Po(e).find(function(t){return!n.includes(t)})),u=jt("input.all").node();o&&nu.includes(o)?(nu=nu.filter(function(t){return t!==o}),u.checked=!1):o&&nu.unshift(o),4!==nu.length?u.checked=!1:jt("input.all").node().checked=!0,r&&i?(nu=Vo,Ft("input").each(function(t,n,e){e[n].checked=!0})):r&&!i&&(nu=[],Ft("input").each(function(t,n,e){e[n].checked=!1})),Go.call(Fo.drawPercents)}},states:{mouseover:function(t){e.states.showTooltip(t)},mouseleave:function(t){Ho.hide()},click:function(t){Ho.hide(),Lo=t,Go.call(Fo.drawState,t)},showTooltip:function(t){var n='\n        <p class="tooltip-heading">\n          '.concat(t.state,'\n        </p>\n        <p class="tooltip-body">\n          $').concat(Ro(t.totaldollars).replace(/G/,"B"),' Total Trade (2017)\n        </p>\n        <ul class="tooltip-list">\n        ').concat(Vo.map(function(n){return'<li class="'.concat(n,'">').concat(n.charAt(0).toUpperCase()+n.slice(1),": ").concat(t[n]?Bo(t[n]):0,"%</li>")}).join(""),'\n\n        </ul>\n        <p class="tooltip-footer">\n          ').concat(Bo(t.grandtotal),"% of Total (2017)\n        </p>\n        ");Ho.show(n)}}};return{drawGridMap:n,drawPercents:function(){zo=Zt().domain(Vo.concat(["other"])).range(Zo.map(function(t,n){var e=[];return nu.forEach(function(t){e.push(Vo.concat(["other"]).indexOf(t))}),e.includes(n)?t:"#fff"})),Ft(".group").each(function(t,n,e){var r={};Vo.forEach(function(n){r[n]=Array(Math.round(t[n]/100*100)).fill({state:t.code,country:n})});var i=[];(eu=Vo.filter(function(t){return nu.indexOf(t)<0})).forEach(function(t){i=i.concat(r[t])}),nu.forEach(function(t){i=i.concat(r[t])}),i=Array(100-i.length).fill({state:t.code,country:"other"}).concat(i);var o=jt(e[n]).attr("x"),u=jt(e[n]).attr("y"),a=jt(e[n]).selectAll(".percent.".concat(t.code)).data(i,function(t){return t});a.exit().remove(),a.enter().append("rect").attr("width",(qo-Ko/2)/10).attr("height",(qo-Ko/2)/10).attr("stroke","#fff").attr("stroke-width","0.25px").merge(a).attr("class",function(n){return"percent ".concat(t.code," ").concat(n.country)}).attr("x",function(t,n){var e=i.findIndex(function(t){return!Po(eu).concat(["other"]).includes(t.country)});return e=e>=0?e:null,(10*Math.ceil((n+1)/10)<=10*Math.ceil(e/10)?Math.abs(99-n):n)%10*(qo-2)/10+parseInt(o,10)+2}).attr("y",function(t,n){return Math.ceil((n+1)/10)*(qo-2)/10+parseInt(u,10)-qo/10+1+2}).transition().duration(600).attr("fill",function(t){return zo(t.country)});var c=jt(e[n]).selectAll(".label.".concat(t.code));c.remove(),(c=jt(e[n]).selectAll(".label.".concat(t.code)).data([t]).enter().append("text").attr("class","label "+t.code)).attr("x",function(t){return(t.col-1)*qo+qo/2+Ko*t.col}).attr("y",function(t){return(t.row-1)*qo+(qo/2-3)+Ko*t.row}).style("text-anchor","middle").text(t.code)}),Ft(".group").on("click",e.states.click)},drawState:function(e,r){jt(".stateModal").remove(),zo=Zt().domain(Vo.concat(["other"])).range(Zo);var i=t.filter(function(t){return t.code===r.code});Io=n.width();var o=.3*(Yo=n.width()),u=Go.selectAll(".map");Go.selectAll(".gridmap"),u.append("g").attr("class","stateModal"),jt(".stateModal").append("rect").attr("width",Io).attr("height",Yo).attr("fill","#000").attr("opacity","0.3"),jt(".stateModal").append("rect").attr("width",.75*Io).attr("height",.45*Yo).attr("x",Io/7.5).attr("y",Io/7.5).attr("fill","#fff").attr("stroke","#000").attr("stroke-width","1.5px").attr("paint-order","stroke"),jt(".stateModal").append("foreignObject").attr("cursor","pointer").attr("width",Io/10).attr("height",Yo/20).attr("x",Io-Io/7.5-2*Ko).attr("y",Io/7.5+Ko).append("xhtml:div").attr("class","icon-close-lg").on("click",function(){jt(".stateModal").remove()}),jt(".stateModal").selectAll(".stateBorder").data(i).enter().append("rect").attr("class","stateBorder").attr("fill","#fff").attr("stroke",function(t){return $o(t.totaldollars)}).attr("stroke-width",function(t){return Xo(t.totaldollars)}).attr("x",Io/5).attr("y",Io/5+Ko).attr("width",o-3).attr("height",o-2);var a={};Vo.forEach(function(t){a[t]=Array(Math.round(i[0][t]/100*100)).fill({state:i[0].code,country:t})});var c=[];(eu=Vo.filter(function(t){return nu.indexOf(t)<0})).forEach(function(t){c=c.concat(a[t])}),nu.forEach(function(t){c=c.concat(a[t])}),c=Array(100-c.length).fill({state:i[0].code,country:"other"}).concat(c);var l=jt(".stateBorder").attr("x"),s=jt(".stateBorder").attr("y"),f=(jt(".stateModal").selectAll(".percentModal.".concat(i[0].code)).data(c,function(t){return t}).enter().append("rect").attr("class",function(t){return"percent ".concat(i[0].code," ").concat(t.country)}).attr("fill",function(t){return zo(t.country)}).attr("x",function(t,n){var e=c.findIndex(function(t){return!Po(eu).concat(["other"]).includes(t.country)});return e=e>=0?e:null,(10*Math.ceil((n+1)/10)<=10*Math.ceil(e/10)?Math.abs(99-n):n)%10*(o-2)/10+parseInt(l,10)+2}).attr("y",function(t,n){return Math.ceil((n+1)/10)*(o-2)/10+parseInt(s,10)-o/10+1+2}).attr("height",0).attr("width",(o-tu)/10).attr("height",(o-tu)/10),parseInt(l,10)+o+Ko);jt(".stateModal").append("foreignObject").attr("x",f).attr("y",parseInt(s,10)-Ko).attr("width",Io-o).append("xhtml:div").html('<div class="modal-heading">\n                '.concat(r.state,'\n              </div>\n              <div class="modal-body">\n                $').concat(Ro(r.totaldollars).replace(/G/,"B"),' Total Trade (2017)\n              </div>\n              <ul class="modal-list">\n              ').concat(Vo.map(function(t){return'<li class="'.concat(t,'">').concat(t.charAt(0).toUpperCase()+t.slice(1),": ").concat(i[0][t]?Bo(i[0][t]):0,"%</li> ")}).join(""),'\n\n              </ul> <div class="modal-footer">\n                  ').concat(Bo(r.grandtotal),"% of Total (2017)\n                </div>"))},interactions:e}}function iu(){if(Fo){var t=Go.node().offsetWidth;Fo.drawGridMap.width(t),Fo.drawGridMap.height(t),Go.call(Fo.drawGridMap),Go.call(Fo.drawPercents),jt(".stateModal").size()&&(jt(".stateModal").remove(),Fo.interactions.states.click(Lo))}}var ou={init:function(t){Go.datum(t),Fo=ru(t),iu()},draw:ru,resize:iu};function uu(t,n){return function(t){if(Array.isArray(t))return t}(t)||function(t,n){var e=[],r=!0,i=!1,o=void 0;try{for(var u,a=t[Symbol.iterator]();!(r=(u=a.next()).done)&&(e.push(u.value),!n||e.length!==n);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==a.return||a.return()}finally{if(i)throw o}}return e}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var au,cu="./data/data.csv";!function(){var t=X(cu);Promise.all([t]).then(function(t){var n=uu(t,1)[0];au=n}).then(function(){var t=c(au,function(t){return+t.totaldollars});document.querySelector(".min").innerHTML="$"+b(",.0f")(t[0]).replace(/G/,"B"),document.querySelector(".max").innerHTML="$"+b(",.0f")(t[1]).replace(/G/,"B"),ou.init(au)})}(),window.addEventListener("resize",ou.resize)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,